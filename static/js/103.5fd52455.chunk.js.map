{"version":3,"sources":["views/components/divider/DividerText.js","views/components/divider/DividerIcons.js","views/components/divider/DividerStyle.js","views/components/divider/DividerColors.js","views/components/divider/DividerDefault.js","views/components/divider/DividerPosition.js","views/components/divider/DividerSourceCode.js","views/components/divider/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["DividerText","_jsx","className","children","DividerIcon","_jsxs","Fragment","ArrowDown","size","Star","Check","XCircle","Clock","DividerStyle","DividerColors","DividerDefault","DividerPosition","dividerDefault","dividerText","dividerPosition","dividerColors","dividerIcon","dividerStyle","Divider","useEffect","Prism","highlightAll","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","title","code","CardText","DividerIcons","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","color","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","onClick","Collapse"],"mappings":"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","file":"static/js/103.5fd52455.chunk.js","sourcesContent":["const DividerText = () => {\r\n  return (\r\n    <div className='divider'>\r\n      <div className='divider-text'>My Text</div>\r\n    </div>\r\n  )\r\n}\r\nexport default DividerText\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Icons Imports\r\nimport { ArrowDown, Star, Check, XCircle, Clock } from 'react-feather'\r\n\r\nconst DividerIcon = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='divider divider-start'>\r\n        <div className='divider-text'>\r\n          <ArrowDown size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider divider-start-center'>\r\n        <div className='divider-text'>\r\n          <Star size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider'>\r\n        <div className='divider-text'>\r\n          <Check size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider divider-end-center'>\r\n        <div className='divider-text'>\r\n          <XCircle size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider divider-end'>\r\n        <div className='divider-text'>\r\n          <Clock size={15} />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerIcon\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\nconst DividerStyle = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='divider divider-dotted'>\r\n        <div className='divider-text'>Dotted</div>\r\n      </div>\r\n\r\n      <div className='divider divider-dashed'>\r\n        <div className='divider-text'>Dashed</div>\r\n      </div>\r\n\r\n      <div className='divider'>\r\n        <div className='divider-text'>Solid</div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerStyle\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\nconst DividerColors = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='divider'>\r\n        <div className='divider-text'>Default</div>\r\n      </div>\r\n      <div className='divider divider-primary'>\r\n        <div className='divider-text'>Primary</div>\r\n      </div>\r\n      <div className='divider divider-secondary'>\r\n        <div className='divider-text'>Secondary</div>\r\n      </div>\r\n      <div className='divider divider-success'>\r\n        <div className='divider-text'>Success</div>\r\n      </div>\r\n      <div className='divider divider-danger'>\r\n        <div className='divider-text'>Danger</div>\r\n      </div>\r\n      <div className='divider divider-warning'>\r\n        <div className='divider-text'>Warning</div>\r\n      </div>\r\n      <div className='divider divider-info'>\r\n        <div className='divider-text'>Info</div>\r\n      </div>\r\n      <div className='divider divider-dark'>\r\n        <div className='divider-text'>Dark</div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerColors\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\nconst DividerDefault = () => {\r\n  return (\r\n    <Fragment>\r\n      <p>\r\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis\r\n        aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n      </p>\r\n      <hr />\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n        magna aliqua.\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerDefault\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\nconst DividerPosition = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='divider divider-start'>\r\n        <div className='divider-text'>Start</div>\r\n      </div>\r\n\r\n      <div className='divider divider-start-center'>\r\n        <div className='divider-text'>Start Center</div>\r\n      </div>\r\n\r\n      <div className='divider'>\r\n        <div className='divider-text'>Center(Default)</div>\r\n      </div>\r\n\r\n      <div className='divider divider-end-center'>\r\n        <div className='divider-text'>End Center</div>\r\n      </div>\r\n\r\n      <div className='divider divider-end'>\r\n        <div className='divider-text'>End</div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerPosition\r\n","export const dividerDefault = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\n\r\nconst DividerDefault = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <p>\r\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\r\n        ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n        reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\r\n        qui officia deserunt mollit anim id est laborum.\r\n      </p>\r\n      <hr />\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua.\r\n      </p>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DividerDefault\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const dividerText = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\n\r\nconst DividerText = () => {\r\n  return (\r\n    <div className='divider'>\r\n      <div className='divider-text'>My Text</div>\r\n    </div>\r\n  )\r\n}\r\nexport default DividerText\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const dividerPosition = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport { Fragment } from 'react'\r\n\r\nconst DividerPosition = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='divider divider-start'>\r\n        <div className='divider-text'>Start</div>\r\n      </div>\r\n\r\n      <div className='divider divider-start-center'>\r\n        <div className='divider-text'>Start Center</div>\r\n      </div>\r\n\r\n      <div className='divider'>\r\n        <div className='divider-text'>Center(Default)</div>\r\n      </div>\r\n\r\n      <div className='divider divider-end-center'>\r\n        <div className='divider-text'>End Center</div>\r\n      </div>\r\n\r\n      <div className='divider divider-end'>\r\n        <div className='divider-text'>End</div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerPosition\r\n\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const dividerColors = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\n\r\nconst DividerColors = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='divider'>\r\n        <div className='divider-text'>Default</div>\r\n      </div>\r\n      <div className='divider divider-primary'>\r\n        <div className='divider-text'>Primary</div>\r\n      </div>\r\n      <div className='divider divider-secondary'>\r\n        <div className='divider-text'>Secondary</div>\r\n      </div>\r\n      <div className='divider divider-success'>\r\n        <div className='divider-text'>Success</div>\r\n      </div>\r\n      <div className='divider divider-danger'>\r\n        <div className='divider-text'>Danger</div>\r\n      </div>\r\n      <div className='divider divider-warning'>\r\n        <div className='divider-text'>Warning</div>\r\n      </div>\r\n      <div className='divider divider-info'>\r\n        <div className='divider-text'>Info</div>\r\n      </div>\r\n      <div className='divider divider-light'>\r\n        <div className='divider-text'>Light</div>\r\n      </div>\r\n      <div className='divider divider-dark'>\r\n        <div className='divider-text'>Dark</div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DividerColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const dividerIcon = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Fragment } from 'react'\r\nimport { ArrowDown, Star, Check, XCircle, Clock } from 'react-feather'\r\n\r\nconst DividerIcon = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='divider divider-start'>\r\n        <div className='divider-text'>\r\n          <ArrowDown size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider divider-start-center'>\r\n        <div className='divider-text'>\r\n          <Star size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider'>\r\n        <div className='divider-text'>\r\n          <Check size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider divider-end-center'>\r\n        <div className='divider-text'>\r\n          <XCircle size={15} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='divider divider-end'>\r\n        <div className='divider-text'>\r\n          <Clock size={15} />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DividerIcon\r\n\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const dividerStyle = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\n\r\nconst DividerStyle = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='divider divider-dotted'>\r\n        <div className='divider-text'>Dotted</div>\r\n      </div>\r\n\r\n      <div className='divider divider-dashed'>\r\n        <div className='divider-text'>Dashed</div>\r\n      </div>\r\n\r\n      <div className='divider'>\r\n        <div className='divider-text'>Solid</div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DividerStyle\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport DividerText from './DividerText'\nimport DividerIcons from './DividerIcons'\nimport DividerStyle from './DividerStyle'\nimport DividerColors from './DividerColors'\nimport DividerDefault from './DividerDefault'\nimport DividerPosition from './DividerPosition'\n\n// ** Source Code\nimport {\n  dividerIcon,\n  dividerText,\n  dividerStyle,\n  dividerColors,\n  dividerDefault,\n  dividerPosition\n} from './DividerSourceCode'\n\nconst Divider = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Divider' breadCrumbParent='Extra Components' breadCrumbActive='Divider' />\n      <Row>\n        <Col sm='12'>\n          <Card title='Default' code={dividerDefault}>\n            <CardText>\n              You can add a line to divide your section using <code>&lt;hr /&gt;</code> tag.\n            </CardText>\n            <DividerDefault />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Text' code={dividerText}>\n            <CardText>\n              Use class <code>.divider</code> as wrapper for <code>.divider-text</code> to create a divider text\n            </CardText>\n            <DividerText />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Position' code={dividerPosition}>\n            <CardText>\n              Use class <code>.divider-[start | start-center | end | end-center]</code> with <code>.divider</code> to\n              set text position.\n            </CardText>\n            <DividerPosition />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Colors' code={dividerColors}>\n            <CardText>\n              Use class <code>.divider-[primary | secondary | success | danger | warnings | info | dark]</code> with{' '}\n              <code>.divider</code> to set text position.\n            </CardText>\n            <DividerColors />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icons' code={dividerIcon}>\n            <DividerIcons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Style' code={dividerStyle}>\n            <CardText>\n              use class <code>.divider-[dotted | dashed]</code> to change divider style. solid is default style you\n              don't have to add any class for it.\n            </CardText>\n            <DividerStyle />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Divider\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}