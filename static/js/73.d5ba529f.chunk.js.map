{"version":3,"sources":["views/forms/form-elements/input-groups/InputGroupBasic.js","views/forms/form-elements/input-groups/InputGroupSizes.js","views/forms/form-elements/input-groups/InputGroupMerged.js","views/forms/form-elements/input-groups/InputGroupButtons.js","views/forms/form-elements/input-groups/InputGroupCbAndRadio.js","views/forms/form-elements/input-groups/InputGroupDropdown.js","views/forms/form-elements/input-groups/InputGroupSourceCode.js","views/forms/form-elements/input-groups/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js","@core/components/input-password-toggle/index.js"],"names":["InputGroupBasic","_jsxs","Fragment","children","InputGroup","className","_jsx","InputGroupText","Search","size","Input","placeholder","InputPasswordToggle","label","htmlFor","type","InputGroupSizes","InputGroupMerged","InputGroupButtons","Row","Col","md","sm","Button","color","outline","InputGroupCbAndRadio","Label","for","id","name","InputGroupDropdowns","_useState","useState","_useState2","_slicedToArray","dropdownOpen","setDropdownOpen","_useState3","_useState4","dropdownIcon","setDropdownIcon","_useState5","_useState6","dropdownRight","setDropdownRight","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","disabled","divider","Edit","inputGroupBasic","inputGroupMerged","inputGroupCBRadio","inputGroupButtons","inputGroupDropdowns","inputGroupSizes","InputGroups","useEffect","Prism","highlightAll","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Card","title","code","InputCbAndRadio","InputGroupDropdown","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","UncontrolledButtonDropdown","Grid","end","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","onClick","Collapse","forwardRef","ref","_classnames","hideIcon","showIcon","visible","iconSize","inputClassName","invalid","rest","_objectWithoutProperties","_excluded","inputVisibility","setInputVisibility","classnames","_defineProperty","_objectSpread","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/73.d5ba529f.chunk.js","sourcesContent":["import { Fragment } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupBasic = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>\r\n          <Search size={14} />\r\n        </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupBasic\r\n","import { Fragment } from 'react'\r\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\r\n\r\nconst InputGroupSizes = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='mb-1' size='lg'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup className='mb-1'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup size='sm'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupSizes\r\n","import { Fragment } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupMerged = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>\r\n          <Search size={14} />\r\n        </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='merge-password' />\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge'>\r\n        <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupMerged\r\n","import { Button, InputGroup, Input, Row, Col } from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\n\r\nconst InputGroupButtons = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <Input placeholder='Button on right side' />\r\n          <Button color='primary' outline>\r\n            Go\r\n          </Button>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <Button color='primary' outline>\r\n            <Search size={12} />\r\n          </Button>\r\n          <Input type='text' placeholder='Button on both sides' />\r\n          <Button color='primary' outline>\r\n            Search !\r\n          </Button>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupButtons\r\n","import { InputGroup, InputGroupText, Row, Col, Input, Label } from 'reactstrap'\n\nconst InputGroupCbAndRadio = () => {\n  return (\n    <Row>\n      <Label for='col-cb'>Input Group with Checkbox</Label>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Label for='col-radio'>Input Group with Radio</Label>\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupCbAndRadio\n","import { useState } from 'react'\r\n\r\nimport { Row, Col, Input, InputGroup, Dropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nimport { Edit } from 'react-feather'\r\n\r\nconst InputGroupDropdowns = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  const [dropdownIcon, setDropdownIcon] = useState(false)\r\n  const [dropdownRight, setDropdownRight] = useState(false)\r\n\r\n  const toggleDropDown = () => {\r\n    setDropdownOpen(!dropdownOpen)\r\n  }\r\n  const toggleDropdownIcon = () => {\r\n    setDropdownIcon(!dropdownIcon)\r\n  }\r\n  const toggleDropDownRight = () => {\r\n    setDropdownRight(!dropdownRight)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n              <DropdownItem className='w-100' disabled>\r\n                Action\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100' divider />\r\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              <Edit size={12} />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n              <DropdownItem className='w-100' disabled>\r\n                Action\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100' divider />\r\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\r\n            <DropdownToggle color='primary' outline caret>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n              <DropdownItem className='w-100' disabled>\r\n                Action\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100' divider />\r\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupDropdowns\r\n","export const inputGroupBasic = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupBasic = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n          <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupBasic\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupMerged = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupMerged = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n          <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge'>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupMerged\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupCBRadio = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { InputGroup, Input, InputGroupText, Row, Col, Input } from 'reactstrap'\r\n\r\nconst InputGroupCbAndRadio = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n            <InputGroupText>\r\n              <input type='checkbox' />\r\n            </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n            <InputGroupText>\r\n              <input type='radio' />\r\n            </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <small className='fw-semibold w-100 ms-1 my-1'>Custom checkbox and radio</small>\r\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='checkbox' id='exampleCustomCheckbox' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='radio' id='exampleCustomRadio' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupCbAndRadio\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button, InputGroup, Input,  Row, Col } from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\n\r\nconst InputGroupButtons = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-1' lg='6' md='12'>\r\n        <InputGroup>\r\n          <Input />\r\n            <Button color='primary' outline>\r\n              Go\r\n            </Button>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' lg='6' md='12'>\r\n        <InputGroup>\r\n            <Button color='primary' outline>\r\n              <Search size={12} />\r\n            </Button>\r\n          <Input type='text' />\r\n            <Button color='primary' outline>\r\n              Search !\r\n            </Button>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupButtons\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupDropdowns = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Dropdown,\r\n\r\n  InputGroup,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport { Edit } from 'react-feather'\r\n\r\nconst InputGroupDropdowns = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  const [dropdownIcon, setDropdownIcon] = useState(false)\r\n  const [dropdownRight, setDropdownRight] = useState(false)\r\n\r\n  const toggleDropDown = () => {\r\n    setDropdownOpen(!dropdownOpen)\r\n  }\r\n  const toggleDropdownIcon = () => {\r\n    setDropdownIcon(!dropdownIcon)\r\n  }\r\n  const toggleDropDownRight = () => {\r\n    setDropdownRight(!dropdownRight)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg='6' md='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem>Action 1</DropdownItem>\r\n              <DropdownItem disabled>Action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col lg='6' md='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              <Edit size={12} />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem>Action 1</DropdownItem>\r\n              <DropdownItem disabled>Action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\r\n            <DropdownToggle color='primary' outline caret>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem>Action 1</DropdownItem>\r\n              <DropdownItem disabled>Action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupDropdowns\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupSizes = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\r\n\r\nconst InputGroupSizes = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-1' size='lg'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup className='mb-1'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup size='sm'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupSizes\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport InputGroupBasic from './InputGroupBasic'\r\nimport InputGroupSizes from './InputGroupSizes'\r\nimport InputGroupMerged from './InputGroupMerged'\r\nimport InputGroupButtons from './InputGroupButtons'\r\nimport InputCbAndRadio from './InputGroupCbAndRadio'\r\nimport InputGroupDropdown from './InputGroupDropdown'\r\n\r\n// ** Source Code\r\nimport {\r\n  inputGroupBasic,\r\n  inputGroupSizes,\r\n  inputGroupMerged,\r\n  inputGroupCBRadio,\r\n  inputGroupButtons,\r\n  inputGroupDropdowns\r\n} from './InputGroupSourceCode'\r\n\r\nconst InputGroups = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Input Groups' breadCrumbParent='Form Elements' breadCrumbActive='InputGroups' />\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Basic' code={inputGroupBasic}>\r\n            <InputGroupBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Merged' code={inputGroupMerged}>\r\n            <InputGroupMerged />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Sizing' code={inputGroupSizes}>\r\n            <InputGroupSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Checkbox & Radio' code={inputGroupCBRadio}>\r\n            <InputCbAndRadio />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Input Group with Buttons' code={inputGroupButtons}>\r\n            <InputGroupButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Input Group Dropdowns' code={inputGroupDropdowns}>\r\n            <InputGroupDropdown />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default InputGroups\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}