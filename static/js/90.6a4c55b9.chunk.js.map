{"version":3,"sources":["views/pages/authentication/RegisterBasic.js","@core/components/input-password-toggle/index.js"],"names":["RegisterBasic","_jsx","className","children","Card","_jsxs","CardBody","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","CardTitle","tag","CardText","Form","onSubmit","Label","for","Input","type","placeholder","autoFocus","InputPasswordToggle","href","Button","color","block","Facebook","size","Twitter","Mail","GitHub","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","Fragment","InputGroup","classnames","_defineProperty","_objectSpread","InputGroupText","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/90.6a4c55b9.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst RegisterBasic = () => {\r\n  return (\r\n    <div className='auth-wrapper auth-basic px-2'>\r\n      <div className='auth-inner my-2'>\r\n        <Card className='mb-0'>\r\n          <CardBody>\r\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n              <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n                <defs>\r\n                  <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                    <stop stopColor='#000000' offset='0%'></stop>\r\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                  </linearGradient>\r\n                  <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                    <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                  </linearGradient>\r\n                </defs>\r\n                <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n                  <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                    <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                      <path\r\n                        d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                        id='Path'\r\n                        className='text-primary'\r\n                        style={{ fill: 'currentColor' }}\r\n                      ></path>\r\n                      <path\r\n                        d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                        id='Path'\r\n                        fill='url(#linearGradient-1)'\r\n                        opacity='0.2'\r\n                      ></path>\r\n                      <polygon\r\n                        id='Path-2'\r\n                        fill='#000000'\r\n                        opacity='0.049999997'\r\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                      ></polygon>\r\n                      <polygon\r\n                        id='Path-2'\r\n                        fill='#000000'\r\n                        opacity='0.099999994'\r\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                      ></polygon>\r\n                      <polygon\r\n                        id='Path-3'\r\n                        fill='url(#linearGradient-2)'\r\n                        opacity='0.099999994'\r\n                        points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                      ></polygon>\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n              <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n            </Link>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n              Adventure starts here ğŸš€\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n            <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Input type='text' id='register-username' placeholder='johndoe' autoFocus />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Input type='email' id='register-email' placeholder='john@example.com' />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <InputPasswordToggle className='input-group-merge' id='register-password' />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='terms' />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button color='primary' block>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/pages/login-basic'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterBasic\r\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}