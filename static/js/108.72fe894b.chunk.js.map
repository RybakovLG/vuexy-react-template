{"version":3,"sources":["views/components/offcanvas/OffCanvasSourceCode.js","views/components/offcanvas/OffCanvasOptions.js","views/components/offcanvas/OffCanvasPlacement.js","views/components/offcanvas/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["offCanvasPlacement","_jsx","children","className","offCanvasOptions","OffCanvasPlacement","_useState","useState","_useState2","_slicedToArray","canvasOpen","setCanvasOpen","_useState3","_useState4","canvasScroll","setCanvasScroll","_useState5","_useState6","canvasBackdrop","setCanvasBackdrop","toggleCanvasScroll","_jsxs","Button","color","onClick","Offcanvas","scrollable","backdrop","direction","isOpen","toggle","OffcanvasHeader","OffcanvasBody","block","outline","canvasPlacement","setCanvasPlacement","toggleCanvasStart","classnames","_objectSpread","OffCanvas","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","title","code","OffCanvasOptions","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","size","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","Collapse"],"mappings":"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","file":"static/js/108.72fe894b.chunk.js","sourcesContent":["export const offCanvasPlacement = (\r\n  <pre>\r\n    <code className='language-jsx'>{`import { useState } from 'react'\r\nimport classnames from 'classnames'\r\nimport { Button, Offcanvas, OffcanvasHeader, OffcanvasBody } from 'reactstrap'\r\n\r\nconst OffCanvasPlacement = () => {\r\n  const [canvasPlacement, setCanvasPlacement] = useState('start')\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n\r\n  const toggleCanvasStart = () => {\r\n    setCanvasPlacement('start')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasEnd = () => {\r\n    setCanvasPlacement('end')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasTop = () => {\r\n    setCanvasPlacement('top')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBottom = () => {\r\n    setCanvasPlacement('bottom')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='primary' onClick={toggleCanvasStart}>\r\n        Toggle Start\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasEnd}>\r\n        Toggle End\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasTop}>\r\n        Toggle Top\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasBottom}>\r\n        Toggle Bottom\r\n      </Button>\r\n      <Offcanvas direction={canvasPlacement} isOpen={canvasOpen} toggle={toggleCanvasStart}>\r\n        <OffcanvasHeader toggle={toggleCanvasStart}>OffCanvas {canvasPlacement}</OffcanvasHeader>\r\n        <OffcanvasBody\r\n          className={classnames({\r\n            'my-auto mx-0 flex-grow-0': canvasPlacement === 'start' || canvasPlacement === 'end'\r\n          })}\r\n        >\r\n          <p\r\n            className={classnames({\r\n              'text-center': canvasPlacement === 'start' || canvasPlacement === 'end'\r\n            })}\r\n          >\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <Button\r\n            color='primary'\r\n            onClick={toggleCanvasStart}\r\n            className={classnames({\r\n              'mb-1': canvasPlacement === 'start' || canvasPlacement === 'end',\r\n              'me-1': canvasPlacement === 'top' || canvasPlacement === 'bottom'\r\n            })}\r\n            {...(canvasPlacement === 'start' || canvasPlacement === 'end' ? { block: true } : {})}\r\n          >\r\n            Continue\r\n          </Button>\r\n          <Button\r\n            outline\r\n            color='secondary'\r\n            onClick={toggleCanvasStart}\r\n            {...(canvasPlacement === 'start' || canvasPlacement === 'end' ? { block: true } : {})}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OffCanvasPlacement\r\n`}</code>\r\n  </pre>\r\n)\r\n\r\nexport const offCanvasOptions = (\r\n  <pre>\r\n    <code className='language-jsx'>{`import { useState } from 'react'\r\nimport { Button, Offcanvas, OffcanvasHeader, OffcanvasBody } from 'reactstrap'\r\n\r\nconst OffCanvasPlacement = () => {\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n  const [canvasScroll, setCanvasScroll] = useState(false)\r\n  const [canvasBackdrop, setCanvasBackdrop] = useState(true)\r\n\r\n  const toggleCanvasScroll = () => {\r\n    setCanvasScroll(true)\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBackdrop = () => {\r\n    setCanvasBackdrop(false)\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='primary' onClick={toggleCanvasScroll}>\r\n        Enable Body Scrolling\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasBackdrop}>\r\n        Disable Backdrop\r\n      </Button>\r\n      <Offcanvas\r\n        scrollable={canvasScroll}\r\n        backdrop={canvasBackdrop}\r\n        direction='end'\r\n        isOpen={canvasOpen}\r\n        toggle={toggleCanvasScroll}\r\n      >\r\n        <OffcanvasHeader toggle={toggleCanvasScroll}>OffCanvas {canvasScroll ? 'Scroll' : 'Backdrop'}</OffcanvasHeader>\r\n        <OffcanvasBody className='my-auto mx-0 flex-grow-0'>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <Button block color='primary' onClick={toggleCanvasScroll} className='mb-1'>\r\n            Continue\r\n          </Button>\r\n          <Button block outline color='secondary' onClick={toggleCanvasScroll}>\r\n            Cancel\r\n          </Button>\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OffCanvasPlacement\r\n`}</code>\r\n  </pre>\r\n)\r\n","import { useState } from 'react'\r\nimport { Button, Offcanvas, OffcanvasHeader, OffcanvasBody } from 'reactstrap'\r\n\r\nconst OffCanvasPlacement = () => {\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n  const [canvasScroll, setCanvasScroll] = useState(false)\r\n  const [canvasBackdrop, setCanvasBackdrop] = useState(true)\r\n\r\n  const toggleCanvasScroll = () => {\r\n    setCanvasScroll(true)\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBackdrop = () => {\r\n    setCanvasBackdrop(false)\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='primary' onClick={toggleCanvasScroll}>\r\n        Enable Body Scrolling\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasBackdrop}>\r\n        Disable Backdrop\r\n      </Button>\r\n      <Offcanvas\r\n        scrollable={canvasScroll}\r\n        backdrop={canvasBackdrop}\r\n        direction='end'\r\n        isOpen={canvasOpen}\r\n        toggle={toggleCanvasScroll}\r\n      >\r\n        <OffcanvasHeader toggle={toggleCanvasScroll}>OffCanvas {canvasScroll ? 'Scroll' : 'Backdrop'}</OffcanvasHeader>\r\n        <OffcanvasBody className='my-auto mx-0 flex-grow-0'>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <p className='text-center'>\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <Button block color='primary' onClick={toggleCanvasScroll} className='mb-1'>\r\n            Continue\r\n          </Button>\r\n          <Button block outline color='secondary' onClick={toggleCanvasScroll}>\r\n            Cancel\r\n          </Button>\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OffCanvasPlacement\r\n","import { useState } from 'react'\r\nimport classnames from 'classnames'\r\nimport { Button, Offcanvas, OffcanvasHeader, OffcanvasBody } from 'reactstrap'\r\n\r\nconst OffCanvasPlacement = () => {\r\n  const [canvasPlacement, setCanvasPlacement] = useState('start')\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n\r\n  const toggleCanvasStart = () => {\r\n    setCanvasPlacement('start')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasEnd = () => {\r\n    setCanvasPlacement('end')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasTop = () => {\r\n    setCanvasPlacement('top')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBottom = () => {\r\n    setCanvasPlacement('bottom')\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='primary' onClick={toggleCanvasStart}>\r\n        Toggle Start\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasEnd}>\r\n        Toggle End\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasTop}>\r\n        Toggle Top\r\n      </Button>\r\n      <Button color='primary' onClick={toggleCanvasBottom}>\r\n        Toggle Bottom\r\n      </Button>\r\n      <Offcanvas direction={canvasPlacement} isOpen={canvasOpen} toggle={toggleCanvasStart}>\r\n        <OffcanvasHeader toggle={toggleCanvasStart}>OffCanvas {canvasPlacement}</OffcanvasHeader>\r\n        <OffcanvasBody\r\n          className={classnames({\r\n            'my-auto mx-0 flex-grow-0': canvasPlacement === 'start' || canvasPlacement === 'end'\r\n          })}\r\n        >\r\n          <p\r\n            className={classnames({\r\n              'text-center': canvasPlacement === 'start' || canvasPlacement === 'end'\r\n            })}\r\n          >\r\n            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web\r\n            designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have\r\n            scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.\r\n          </p>\r\n          <Button\r\n            color='primary'\r\n            onClick={toggleCanvasStart}\r\n            className={classnames({\r\n              'mb-1': canvasPlacement === 'start' || canvasPlacement === 'end',\r\n              'me-1': canvasPlacement === 'top' || canvasPlacement === 'bottom'\r\n            })}\r\n            {...(canvasPlacement === 'start' || canvasPlacement === 'end' ? { block: true } : {})}\r\n          >\r\n            Continue\r\n          </Button>\r\n          <Button\r\n            outline\r\n            color='secondary'\r\n            onClick={toggleCanvasStart}\r\n            {...(canvasPlacement === 'start' || canvasPlacement === 'end' ? { block: true } : {})}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OffCanvasPlacement\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Source Code\r\nimport { offCanvasPlacement, offCanvasOptions } from './OffCanvasSourceCode'\r\n\r\n// ** Demo Components\r\nimport OffCanvasOptions from './OffCanvasOptions'\r\nimport OffCanvasPlacement from './OffCanvasPlacement'\r\n\r\nconst OffCanvas = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Offcanvas' breadCrumbParent='Components' breadCrumbActive='Offcanvas' />\r\n      <Row className='match-height'>\r\n        <Col sm='12'>\r\n          <Card title='Placement' code={offCanvasPlacement}>\r\n            <OffCanvasPlacement />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Options' code={offCanvasOptions}>\r\n            <OffCanvasOptions />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default OffCanvas\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}