{"version":3,"sources":["@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/RevenueGenerated.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/TinyChartStats.js","@core/components/widgets/stats/ChartOptions.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/statistics/OrdersReceived.js","views/ui-elements/cards/statistics/SubscribersGained.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js"],"names":["StatsWithLineChart","_ref","icon","color","stats","statTitle","series","options","type","height","rest","_objectWithoutProperties","_excluded","_jsxs","Card","_objectSpread","children","CardHeader","className","_jsx","CardText","Avatar","concat","Chart","defaultProps","lineChartOptions","Newsletter","warning","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","axios","get","then","res","chart","id","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","Mail","size","SiteTraffic","Monitor","ActiveUsers","success","UserCheck","QuarterlySales","danger","StatsWithAreaChart","ShoppingCart","analyticsData","sales","RevenueGenerated","kFormatter","CreditCard","revenue","StatsVertical","CardBody","StatisticsCards","context","useContext","ThemeColors","Fragment","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","lg","xs","OrdersBarChart","main","ProfitLineChart","info","sm","StatsCard","cols","md","xl","Eye","MessageSquare","ShoppingBag","Heart","Award","Truck","StatsHorizontal","Cpu","Server","Activity","AlertOctagon","SubscribersGained","QuaterlySales","OrdersReceived","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","Grid","DropdownMenu","end","DropdownItem","CheckSquare","Calendar","classnames","_defineProperty","areaChartOptions","TinyChartStats","title","renderStats","statsMargin","Package","orders","Users","subscribers","subtitle","TrendingUp","User","Box","DollarSign","CardTitle","map","item","index","colMargin","Object","keys","margin","length","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize"],"mappings":"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","file":"static/js/38.5215b160.chunk.js","sourcesContent":["// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardText } from 'reactstrap'\r\n\r\n// ** Default Options\r\nimport { lineChartOptions } from './ChartOptions'\r\n\r\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\r\n  return (\r\n    <Card {...rest}>\r\n      <CardHeader className='align-items-start pb-0'>\r\n        <div>\r\n          <h2 className='fw-bolder'>{stats}</h2>\r\n          <CardText>{statTitle}</CardText>\r\n        </div>\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\r\n      </CardHeader>\r\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithLineChart\r\n\r\n// ** PropTypes\r\nStatsWithLineChart.propTypes = {\r\n  type: PropTypes.string,\r\n  height: PropTypes.string,\r\n  options: PropTypes.object,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nStatsWithLineChart.defaultProps = {\r\n  options: lineChartOptions,\r\n  color: 'primary'\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Mail } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst Newsletter = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'newsletter',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#ffc085'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<Mail size={21} />}\r\n      color='warning'\r\n      stats='28.7k'\r\n      statTitle='Newsletter'\r\n      series={data.series}\r\n      type='line'\r\n      options={options}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default Newsletter\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Monitor } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst SiteTraffic = () => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<Monitor size={21} />}\r\n      color='primary'\r\n      stats='78.9k'\r\n      statTitle='Site Traffic'\r\n      series={data.series}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default SiteTraffic\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { UserCheck } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst ActiveUsers = ({ success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'activeUsers',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#55DD92'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<UserCheck size={21} />}\r\n      color='success'\r\n      stats='659.8k'\r\n      statTitle='Active Users'\r\n      series={data.series}\r\n      options={options}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ActiveUsers\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { ShoppingCart } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst QuarterlySales = ({ danger }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [danger],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<ShoppingCart size={21} />}\r\n      color='danger'\r\n      stats={data.analyticsData.sales}\r\n      statTitle='Quarterly Sales'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default QuarterlySales\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { CreditCard } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst RevenueGenerated = ({ kFormatter, success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<CreditCard size={21} />}\r\n      color='success'\r\n      stats={kFormatter(data.analyticsData.revenue)}\r\n      statTitle='Revenue Generated'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default RevenueGenerated\r\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\r\nimport { Fragment, useContext } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { kFormatter } from '@utils'\r\n\r\n// ** Context\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\n\r\n// ** Custom Components\r\nimport StatsCard from './StatsCard'\r\nimport Newsletter from './Newsletter'\r\nimport SiteTraffic from './SiteTraffic'\r\nimport ActiveUsers from './ActiveUsers'\r\nimport QuaterlySales from './QuaterlySales'\r\nimport OrdersReceived from './OrdersReceived'\r\nimport OrdersBarChart from './OrdersBarChart'\r\nimport ProfitLineChart from './ProfitLineChart'\r\nimport RevenueGenerated from './RevenueGenerated'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport SubscribersGained from './SubscribersGained'\r\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport {\r\n  Eye,\r\n  Cpu,\r\n  Heart,\r\n  Award,\r\n  Truck,\r\n  Server,\r\n  Activity,\r\n  ShoppingBag,\r\n  AlertOctagon,\r\n  MessageSquare\r\n} from 'react-feather'\r\n\r\nconst StatisticsCards = () => {\r\n  // ** Context\r\n  const context = useContext(ThemeColors)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Statistics Cards' breadCrumbParent='Card' breadCrumbActive='Statistics Cards' />\r\n\r\n      <Row>\r\n        {/* Orders Bar Chart */}\r\n        <Col lg='2' xs='6'>\r\n          <OrdersBarChart warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Orders Bar Chart */}\r\n\r\n        {/* Profit Line Chart */}\r\n        <Col lg='2' xs='6'>\r\n          <ProfitLineChart info={context.colors.info.main} />\r\n        </Col>\r\n        {/* Profit Line Chart */}\r\n\r\n        {/* Stats Card */}\r\n        <Col lg='8' sm='12'>\r\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\r\n        </Col>\r\n        {/* Stats Card */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats With Icons */}\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\r\n        </Col>\r\n        {/* Stats With Icons */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats With Icons Horizontal */}\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\r\n        </Col>\r\n        {/* Stats With Icons Horizontal */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats Area Charts */}\r\n        <Col lg='3' sm='6'>\r\n          <SubscribersGained kFormatter={kFormatter} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <QuaterlySales danger={context.colors.danger.main} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Stats Area Charts */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats Line Charts */}\r\n        <Col lg='4' sm='6'>\r\n          <SiteTraffic />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <ActiveUsers success={context.colors.success.main} />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <Newsletter warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Stats Line Charts */}\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default StatisticsCards\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// ** Default Options\r\nimport { areaChartOptions } from './ChartOptions'\r\n\r\nconst StatsWithAreaChart = props => {\r\n  // ** Props\r\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\r\n  return (\r\n    <Card {...rest}>\r\n      <CardBody\r\n        className={classnames('pb-0', {\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\r\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\r\n        <p className='card-text'>{statTitle}</p>\r\n      </CardBody>\r\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithAreaChart\r\n\r\n// ** PropTypes\r\nStatsWithAreaChart.propTypes = {\r\n  type: PropTypes.string,\r\n  height: PropTypes.string,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nStatsWithAreaChart.defaultProps = {\r\n  color: 'primary',\r\n  options: areaChartOptions\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst TinyChartStats = props => {\r\n  // ** Props\r\n  const { title, stats, options, series, type, height } = props\r\n\r\n  return (\r\n    <Card className='card-tiny-line-stats'>\r\n      <CardBody className='pb-50'>\r\n        <h6>{title}</h6>\r\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\r\n        <Chart options={options} series={series} type={type} height={height} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TinyChartStats\r\n\r\n// ** PropTypes\r\nTinyChartStats.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  options: PropTypes.object.isRequired\r\n}\r\n\r\n// ** Default Props\r\nTinyChartStats.defaultProps = {\r\n  height: 100\r\n}\r\n","// ** Area Chart Common Options\r\nexport const areaChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    sparkline: {\r\n      enabled: true\r\n    }\r\n  },\r\n  grid: {\r\n    show: false\r\n  },\r\n  colors: ['#7367F0'],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 2.5\r\n  },\r\n  fill: {\r\n    type: 'gradient',\r\n    gradient: {\r\n      shadeIntensity: 0.9,\r\n      opacityFrom: 0.7,\r\n      opacityTo: 0.5,\r\n      stops: [0, 80, 100]\r\n    }\r\n  },\r\n  xaxis: {\r\n    labels: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false\r\n    }\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      show: false\r\n    }\r\n  },\r\n  tooltip: {\r\n    x: { show: false }\r\n  }\r\n}\r\n\r\n// ** Line Chart Common Options\r\nexport const lineChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    sparkline: {\r\n      enabled: true\r\n    },\r\n    dropShadow: {\r\n      enabled: true,\r\n      top: 5,\r\n      left: 0,\r\n      blur: 4,\r\n      opacity: 0.1\r\n    }\r\n  },\r\n  grid: {\r\n    show: false\r\n  },\r\n  colors: ['#7367F0'],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 5\r\n  },\r\n  fill: {\r\n    type: 'gradient',\r\n    gradient: {\r\n      shadeIntensity: 1,\r\n      gradientToColors: ['#A9A2F6'],\r\n      opacityFrom: 1,\r\n      opacityTo: 1,\r\n      stops: [0, 100, 100, 100]\r\n    }\r\n  },\r\n\r\n  xaxis: {\r\n    labels: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false\r\n    }\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      show: false\r\n    }\r\n  },\r\n  tooltip: {\r\n    x: { show: false }\r\n  }\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Package } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst OrdersReceived = ({ kFormatter, warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Package size={21} />}\r\n      color='warning'\r\n      stats={kFormatter(data.analyticsData.orders)}\r\n      statTitle='Orders Received'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default OrdersReceived\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Users } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst SubscribersGained = ({ kFormatter }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Users size={21} />}\r\n      color='primary'\r\n      stats={kFormatter(data.analyticsData.subscribers)}\r\n      statTitle='Subscribers Gained'\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default SubscribersGained\r\n","// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\r\n\r\nconst StatsCard = ({ cols }) => {\r\n  const data = [\r\n    {\r\n      title: '230k',\r\n      subtitle: 'Sales',\r\n      color: 'light-primary',\r\n      icon: <TrendingUp size={24} />\r\n    },\r\n    {\r\n      title: '8.549k',\r\n      subtitle: 'Customers',\r\n      color: 'light-info',\r\n      icon: <User size={24} />\r\n    },\r\n    {\r\n      title: '1.423k',\r\n      subtitle: 'Products',\r\n      color: 'light-danger',\r\n      icon: <Box size={24} />\r\n    },\r\n    {\r\n      title: '$9745',\r\n      subtitle: 'Revenue',\r\n      color: 'light-success',\r\n      icon: <DollarSign size={24} />\r\n    }\r\n  ]\r\n\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const colMargin = Object.keys(cols)\r\n      const margin = index === 2 ? 'sm' : colMargin[0]\r\n      return (\r\n        <Col\r\n          key={index}\r\n          {...cols}\r\n          className={classnames({\r\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\r\n          })}\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\r\n            <div className='my-auto'>\r\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\r\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className='card-statistics'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Statistics</CardTitle>\r\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\r\n      </CardHeader>\r\n      <CardBody className='statistics-body'>\r\n        <Row>{renderData()}</Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsCard\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst OrdersBarChart = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '20%',\r\n        borderRadius: [0, 5],\r\n        colors: {\r\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\r\n          backgroundBarRadius: 5\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: [warning],\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='bar'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default OrdersBarChart\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst ProfitLineChart = ({ info }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: '#EBEBEB',\r\n      strokeDashArray: 5,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      padding: {\r\n        top: -30,\r\n        bottom: -10\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 3\r\n    },\r\n    colors: [info],\r\n    series: [\r\n      {\r\n        data: [0, 20, 5, 30, 15, 45]\r\n      }\r\n    ],\r\n    markers: {\r\n      size: 2,\r\n      colors: info,\r\n      strokeColors: info,\r\n      strokeWidth: 2,\r\n      strokeOpacity: 1,\r\n      strokeDashArray: 0,\r\n      fillOpacity: 1,\r\n      discrete: [\r\n        {\r\n          seriesIndex: 0,\r\n          dataPointIndex: 5,\r\n          fillColor: '#ffffff',\r\n          strokeColor: info,\r\n          size: 5\r\n        }\r\n      ],\r\n      shape: 'circle',\r\n      radius: 2,\r\n      hover: {\r\n        size: 3\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '0px'\r\n        }\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='line'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ProfitLineChart\r\n"],"sourceRoot":""}