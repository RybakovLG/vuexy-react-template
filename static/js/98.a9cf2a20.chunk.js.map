{"version":3,"sources":["views/components/autocomplete/AutoCompleteAjax.js","views/components/autocomplete/AutoCompleteBasic.js","views/components/autocomplete/AutoCompleteRender.js","views/components/autocomplete/AutoCompleteSections.js","views/components/autocomplete/AutoCompleteLimit.js","views/components/autocomplete/AutoCompleteSuggestions.js","views/components/autocomplete/AutoCompleteSourceCode.js","views/components/autocomplete/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["AutoCompleteAjax","_useState","useState","_useState2","_slicedToArray","suggestions","setSuggestions","useEffect","axios","get","then","response","data","autoComplete","length","_jsx","AutoComplete","className","filterKey","suggestionLimit","placeholder","AutoCompleteBasic","title","AutoCompleteRender","name","img","img1","img2","img3","img4","img6","img5","customRender","suggestion","i","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","_jsxs","onMouseEnter","indexOf","classnames","active","onClick","e","children","src","alt","height","width","AutoCompleteSections","groupTitle","grouped","filterHeaderKey","AutoCompleteSearchLimit","AutoCompleteDefaultSuggestions","defaultSuggestions","basicExample","sectionExample","ajaxExample","customRenderExample","defaultSuggestionsExample","searchLimitExample","Prism","highlightAll","Fragment","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","Card","code","AutoCompleteSuggestions","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","UncontrolledButtonDropdown","DropdownToggle","color","size","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","isOpen","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","Collapse"],"mappings":"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","file":"static/js/98.a9cf2a20.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteAjax = () => {\r\n  // ** State\r\n  const [suggestions, setSuggestions] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/autocomplete/data').then(response => setSuggestions(response.data.autoComplete))\r\n  }, [])\r\n\r\n  return suggestions.length ? (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder='Search for any of the top 250 IMDB movies'\r\n    />\r\n  ) : null\r\n}\r\nexport default AutoCompleteAjax\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteBasic = () => {\r\n  // ** State\r\n  const [suggestions] = useState([\r\n    {\r\n      title: 'React.js'\r\n    },\r\n    {\r\n      title: 'Angular.js'\r\n    },\r\n    {\r\n      title: 'Javascript'\r\n    },\r\n    {\r\n      title: 'Vue.js'\r\n    },\r\n    {\r\n      title: 'HTML'\r\n    },\r\n    {\r\n      title: 'CSS'\r\n    },\r\n    {\r\n      title: 'SCSS'\r\n    },\r\n    {\r\n      title: 'PHP'\r\n    },\r\n    {\r\n      title: 'Laravel'\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder=\"Type 'a'\"\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteBasic\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Components\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\n// ** Images\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\n\r\nconst AutoCompleteRender = () => {\r\n  // ** State\r\n  const [suggestions] = useState([\r\n    {\r\n      name: 'Jake Shelton',\r\n      img: img1\r\n    },\r\n    {\r\n      name: 'Edith Baldwin',\r\n      img: img2\r\n    },\r\n    {\r\n      name: 'Jennifer Wolfe',\r\n      img: img3\r\n    },\r\n    {\r\n      name: 'Emily Washington',\r\n      img: img4\r\n    },\r\n    {\r\n      name: 'Heather Green',\r\n      img: img6\r\n    },\r\n    {\r\n      name: 'Brian Moore',\r\n      img: img5\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      filterKey='name'\r\n      placeholder=\"Type 'a'\"\r\n      className='form-control'\r\n      suggestions={suggestions}\r\n      customRender={(suggestion, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => (\r\n        <li\r\n          key={i}\r\n          onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\r\n          className={classnames('suggestion-item', {\r\n            active: filteredData.indexOf(suggestion) === activeSuggestion\r\n          })}\r\n          onClick={e => {\r\n            onSuggestionItemClick(null, e)\r\n          }}\r\n        >\r\n          <img src={suggestion.img} alt={suggestion.name} height='32' width='32' className='me-1' />\r\n          <span>{suggestion.name}</span>\r\n        </li>\r\n      )}\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteRender\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteSections = () => {\r\n  // ** State\r\n  const [suggestions] = useState([\r\n    {\r\n      groupTitle: '1970s',\r\n      data: [\r\n        {\r\n          title: 'C'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '1980s',\r\n      data: [\r\n        {\r\n          title: 'C++'\r\n        },\r\n        {\r\n          title: 'Perl'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '1990s',\r\n      data: [\r\n        {\r\n          title: 'Haskell'\r\n        },\r\n        {\r\n          title: 'Python'\r\n        },\r\n        {\r\n          title: 'Java'\r\n        },\r\n        {\r\n          title: 'Javascript'\r\n        },\r\n        {\r\n          title: 'PHP'\r\n        },\r\n        {\r\n          title: 'Ruby'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '2000s',\r\n      data: [\r\n        {\r\n          title: 'C#'\r\n        },\r\n        {\r\n          title: 'Scala'\r\n        },\r\n        {\r\n          title: 'Clojure'\r\n        },\r\n        {\r\n          title: 'Go'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '2010s',\r\n      data: [\r\n        {\r\n          title: 'Elm'\r\n        }\r\n      ]\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      grouped={true}\r\n      filterKey='title'\r\n      placeholder=\"Type 'c'\"\r\n      className='form-control'\r\n      suggestions={suggestions}\r\n      filterHeaderKey='groupTitle'\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteSections\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteSearchLimit = () => {\r\n  // ** State\r\n  const [suggestions] = useState([\r\n    {\r\n      title: 'React.js'\r\n    },\r\n    {\r\n      title: 'Angular.js'\r\n    },\r\n    {\r\n      title: 'Javascript'\r\n    },\r\n    {\r\n      title: 'Vue.js'\r\n    },\r\n    {\r\n      title: 'HTML'\r\n    },\r\n    {\r\n      title: 'CSS'\r\n    },\r\n    {\r\n      title: 'SCSS'\r\n    },\r\n    {\r\n      title: 'PHP'\r\n    },\r\n    {\r\n      title: 'Laravel'\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={2}\r\n      placeholder=\"Type 'a'\"\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteSearchLimit\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteDefaultSuggestions = () => {\r\n  // ** State\r\n  const [suggestions] = useState([\r\n    {\r\n      title: 'React.js'\r\n    },\r\n    {\r\n      title: 'Angular.js'\r\n    },\r\n    {\r\n      title: 'Javascript'\r\n    },\r\n    {\r\n      title: 'Vue.js'\r\n    },\r\n    {\r\n      title: 'HTML'\r\n    },\r\n    {\r\n      title: 'CSS'\r\n    },\r\n    {\r\n      title: 'SCSS'\r\n    },\r\n    {\r\n      title: 'PHP'\r\n    },\r\n    {\r\n      title: 'Laravel'\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder=\"Type 'a'\"\r\n      className='form-control'\r\n      suggestions={suggestions}\r\n      defaultSuggestions={true}\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteDefaultSuggestions\r\n","export const basicExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteBasic = () => {\r\n  const [suggestions] = useState([\r\n    {\r\n      title: 'React.js'\r\n    },\r\n    {\r\n      title: 'Angular.js'\r\n    },\r\n    {\r\n      title: 'Javascript'\r\n    },\r\n    {\r\n      title: 'Vue.js'\r\n    },\r\n    {\r\n      title: 'HTML'\r\n    },\r\n    {\r\n      title: 'CSS'\r\n    },\r\n    {\r\n      title: 'SCSS'\r\n    },\r\n    {\r\n      title: 'PHP'\r\n    },\r\n    {\r\n      title: 'Laravel'\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder=\"Type 'a'\"\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteBasic\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const sectionExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteSections = () => {\r\n  const [suggestions] = useState([\r\n    {\r\n      groupTitle: '1970s',\r\n      data: [\r\n        {\r\n          title: 'C'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '1980s',\r\n      data: [\r\n        {\r\n          title: 'C++'\r\n        },\r\n        {\r\n          title: 'Perl'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '1990s',\r\n      data: [\r\n        {\r\n          title: 'Haskell'\r\n        },\r\n        {\r\n          title: 'Python'\r\n        },\r\n        {\r\n          title: 'Java'\r\n        },\r\n        {\r\n          title: 'Javascript'\r\n        },\r\n        {\r\n          title: 'PHP'\r\n        },\r\n        {\r\n          title: 'Ruby'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '2000s',\r\n      data: [\r\n        {\r\n          title: 'C#'\r\n        },\r\n        {\r\n          title: 'Scala'\r\n        },\r\n        {\r\n          title: 'Clojure'\r\n        },\r\n        {\r\n          title: 'Go'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      groupTitle: '2010s',\r\n      data: [\r\n        {\r\n          title: 'Elm'\r\n        }\r\n      ]\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      filterHeaderKey='groupTitle'\r\n      grouped={true}\r\n      placeholder=\"Type 'c'\"\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteSections\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const ajaxExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteAjax = () => {\r\n  const [suggestions, setSuggestions] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/autocomplete/data')\r\n      .then(response => setSuggestions(response.data.autoComplete))\r\n  }, [])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder='Search for any of the top 250 IMDB movies'\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteAjax\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const customRenderExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport classnames from 'classnames'\r\nimport AutoComplete from '@components/autocomplete'\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\n\r\nconst AutoCompleteRender = () => {\r\n  const [suggestions] = useState([\r\n    {\r\n      name: 'Jake Shelton',\r\n      img: img1\r\n    },\r\n    {\r\n      name: 'Edith Baldwin',\r\n      img: img2\r\n    },\r\n    {\r\n      name: 'Jennifer Wolfe',\r\n      img: img3\r\n    },\r\n    {\r\n      name: 'Emily Washington',\r\n      img: img4\r\n    },\r\n    {\r\n      name: 'Heather Green',\r\n      img: img6\r\n    },\r\n    {\r\n      name: 'Brian Moore',\r\n      img: img5\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='name'\r\n      placeholder=\"Type 'a'\"\r\n      customRender={(\r\n        suggestion,\r\n        i,\r\n        filteredData,\r\n        activeSuggestion,\r\n        onSuggestionItemClick,\r\n        onSuggestionItemHover\r\n      ) => (\r\n        <li\r\n          className={classnames('suggestion-item', {\r\n            active: filteredData.indexOf(suggestion) === activeSuggestion\r\n          })}\r\n          key={i}\r\n          onMouseEnter={() =>\r\n            onSuggestionItemHover(filteredData.indexOf(suggestion))\r\n          }\r\n          onClick={e => {\r\n            onSuggestionItemClick(null, e)\r\n          }}\r\n        >\r\n          <img\r\n            src={suggestion.img}\r\n            alt={suggestion.name}\r\n            height='32'\r\n            width='32'\r\n            className='me-1'\r\n          />\r\n          <span>{suggestion.name}</span>\r\n        </li>\r\n      )}\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteRender\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const defaultSuggestionsExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteDefaultSuggestions = () => {\r\n  const [suggestions] = useState([\r\n    {\r\n      title: 'React.js'\r\n    },\r\n    {\r\n      title: 'Angular.js'\r\n    },\r\n    {\r\n      title: 'Javascript'\r\n    },\r\n    {\r\n      title: 'Vue.js'\r\n    },\r\n    {\r\n      title: 'HTML'\r\n    },\r\n    {\r\n      title: 'CSS'\r\n    },\r\n    {\r\n      title: 'SCSS'\r\n    },\r\n    {\r\n      title: 'PHP'\r\n    },\r\n    {\r\n      title: 'Laravel'\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      defaultSuggestions={true}\r\n      placeholder=\"Type 'a'\"\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteDefaultSuggestions\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const searchLimitExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteSearchLimit = () => {\r\n  const [suggestions] = useState([\r\n    {\r\n      title: 'React.js'\r\n    },\r\n    {\r\n      title: 'Angular.js'\r\n    },\r\n    {\r\n      title: 'Javascript'\r\n    },\r\n    {\r\n      title: 'Vue.js'\r\n    },\r\n    {\r\n      title: 'HTML'\r\n    },\r\n    {\r\n      title: 'CSS'\r\n    },\r\n    {\r\n      title: 'SCSS'\r\n    },\r\n    {\r\n      title: 'PHP'\r\n    },\r\n    {\r\n      title: 'Laravel'\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={2}\r\n      placeholder=\"Type 'a'\"\r\n    />\r\n  )\r\n}\r\nexport default AutoCompleteSearchLimit\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport AutoCompleteAjax from './AutoCompleteAjax'\r\nimport AutoCompleteBasic from './AutoCompleteBasic'\r\nimport AutoCompleteRender from './AutoCompleteRender'\r\nimport AutoCompleteSections from './AutoCompleteSections'\r\nimport AutoCompleteSearchLimit from './AutoCompleteLimit'\r\nimport AutoCompleteSuggestions from './AutoCompleteSuggestions'\r\n\r\n// ** Source Code\r\nimport {\r\n  ajaxExample,\r\n  basicExample,\r\n  sectionExample,\r\n  searchLimitExample,\r\n  customRenderExample,\r\n  defaultSuggestionsExample\r\n} from './AutoCompleteSourceCode'\r\n\r\nconst AutoComplete = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs\r\n        breadCrumbTitle='Auto Complete'\r\n        breadCrumbParent='Extra Components'\r\n        breadCrumbActive='Auto Complete'\r\n      />\r\n      <Row>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Basic' code={basicExample}>\r\n            <AutoCompleteBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Sections' code={sectionExample}>\r\n            <AutoCompleteSections />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Ajax' code={ajaxExample}>\r\n            <AutoCompleteAjax />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Custom Render' code={customRenderExample}>\r\n            <AutoCompleteRender />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Default Suggestions' code={defaultSuggestionsExample}>\r\n            <AutoCompleteSuggestions />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Search Limit' code={searchLimitExample}>\r\n            <AutoCompleteSearchLimit />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default AutoComplete\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}