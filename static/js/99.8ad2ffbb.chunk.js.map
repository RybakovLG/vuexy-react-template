{"version":3,"sources":["views/components/badgePills/BadgePillGlow.js","views/components/badgePills/BadgeBlock.js","views/components/badgePills/BadgePillLink.js","views/components/badgePills/BadgePillLight.js","views/components/badgePills/BadgeNotification.js","views/components/badgePills/BadgePillContextual.js","views/components/badgePills/BadgePillSourceCode.js","views/components/badgePills/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgePillGlow","_jsxs","className","children","_jsx","Badge","color","pill","BadgePillBlock","BadgePillLink","href","Link","size","BadgePillLight","BadgePillNotification","Bell","BadgePillContextual","badgePillLight","badgePillGlow","badgePillContextual","badgePillNotification","badgePillLink","badgePillBlock","BadgePill","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","title","code","CardText","BadgeGlow","BadgeNotification","md","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","to","active","UncontrolledButtonDropdown","DropdownToggle","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","onClick","Collapse"],"mappings":"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","file":"static/js/99.8ad2ffbb.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillGlow = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' pill className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillGlow\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillBlock = () => {\r\n  return (\r\n    <Badge pill color='danger' className='d-block'>\r\n      <span>Block Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillBlock\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgePillLink = () => {\r\n  return (\r\n    <Badge color='primary' pill href='#'>\r\n      <Link size={12} />\r\n      <span className='align-middle ms-50'>Link Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillLink\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillLight = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='light-primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger' pill>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='light-warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info' pill>\r\n        Info\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillLight\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Bell } from 'react-feather'\r\n\r\nconst BadgePillNotification = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <div className='position-relative'>\r\n        <Badge pill color='primary' className='badge-up'>\r\n          4\r\n        </Badge>\r\n        <Bell className='text-primary' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='danger' className='badge-up'>\r\n          5\r\n        </Badge>\r\n        <Bell className='text-danger' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='info' className='badge-up'>\r\n          6\r\n        </Badge>\r\n        <Bell className='text-info' size={22} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillNotification\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillContextual = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillContextual\r\n","export const badgePillLight = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillLight = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='light-primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger' pill>\r\n      Danger\r\n      </Badge>\r\n      <Badge color='light-warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info' pill>\r\n        Info\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgePillLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillGlow = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillGlow = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' pill className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill className='badge-glow mb-1'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgePillGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillContextual = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillContextual = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgePillContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillNotification = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Bell } from 'react-feather'\r\n\r\nconst BadgePillNotification = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <div className='position-relative'>\r\n        <Badge pill color='primary' className='badge-up'>\r\n          4\r\n        </Badge>\r\n        <Bell className='text-primary' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='danger' className='badge-up'>\r\n          5\r\n        </Badge>\r\n        <Bell className='text-danger' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='info' className='badge-up'>\r\n          6\r\n        </Badge>\r\n        <Bell className='text-info' size={22} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillNotification\r\n\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillLink = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgePillLink = () => {\r\n  return (\r\n    <Badge color='primary' pill href='#'>\r\n      <Link size={12} />\r\n      <span className='align-middle ms-50'>Link Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillBlock = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillBlock = () => {\r\n  return (\r\n    <Badge pill color='primary' className='d-block'>\r\n      <span>Block Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport BadgeGlow from './BadgePillGlow'\r\nimport BadgePillBlock from './BadgeBlock'\r\nimport BadgePillLink from './BadgePillLink'\r\nimport BadgePillLight from './BadgePillLight'\r\nimport BadgeNotification from './BadgeNotification'\r\nimport BadgePillContextual from './BadgePillContextual'\r\n\r\n// ** Source Code\r\nimport {\r\n  badgePillGlow,\r\n  badgePillLink,\r\n  badgePillBlock,\r\n  badgePillLight,\r\n  badgePillContextual,\r\n  badgePillNotification\r\n} from './BadgePillSourceCode'\r\n\r\nconst BadgePill = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Pill Badges' breadCrumbParent='Components' breadCrumbActive='Pill Badges' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Contextual' code={badgePillContextual}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>pill</code> with <code>Badge</code> tag to create badge pill.\r\n            </CardText>\r\n            <BadgePillContextual />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Glow' code={badgePillGlow}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge.\r\n            </CardText>\r\n            <BadgeGlow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Light' code={badgePillLight}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>pill</code> and <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create\r\n              a light badge pill.\r\n            </CardText>\r\n            <BadgePillLight />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Notifications' code={badgePillNotification}>\r\n            <CardText className='mb-0'>\r\n              Use <code>.badge-up</code> to set pill badge to higher than other text. So that it can work with\r\n              notifications also.\r\n            </CardText>\r\n            <BadgeNotification />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Link' code={badgePillLink}>\r\n            <CardText>\r\n              Use <code>href=\"#\"</code> prop to use badge as a link.\r\n            </CardText>\r\n            <BadgePillLink />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Block' code={badgePillBlock}>\r\n            <CardText>\r\n              Use <code>.d-block</code> class to make badge display as block.\r\n            </CardText>\r\n            <BadgePillBlock />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default BadgePill\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}