{"version":3,"sources":["views/pages/authentication/Register.js","@core/components/input-password-toggle/index.js"],"names":["defaultValues","email","terms","username","password","Register","ability","useContext","AbilityContext","skin","useSkin","history","useHistory","dispatch","useDispatch","_useForm","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","concat","default","_jsx","className","children","_jsxs","Row","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Form","action","onSubmit","data","tempData","_objectSpread","Object","values","every","field","length","useJwt","register","then","res","error","property","type","message","user","accessToken","update","handleLogin","push","catch","err","console","log","key","Label","for","Controller","name","render","_ref","Input","autoFocus","placeholder","invalid","FormFeedback","_ref2","_ref3","InputPasswordToggle","_ref4","checked","value","href","Button","block","color","Facebook","size","Twitter","Mail","GitHub","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","Fragment","InputGroup","classnames","_defineProperty","InputGroupText","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/89.e752ab84.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardTitle, CardText, Label, Button, Form, Input, FormFeedback } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst defaultValues = {\r\n  email: '',\r\n  terms: false,\r\n  username: '',\r\n  password: ''\r\n}\r\n\r\nconst Register = () => {\r\n  // ** Hooks\r\n  const ability = useContext(AbilityContext)\r\n  const { skin } = useSkin()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    const tempData = { ...data }\r\n    delete tempData.terms\r\n    if (Object.values(tempData).every(field => field.length > 0) && data.terms === true) {\r\n      const { username, email, password } = data\r\n      useJwt\r\n        .register({ username, email, password })\r\n        .then(res => {\r\n          if (res.data.error) {\r\n            for (const property in res.data.error) {\r\n              if (res.data.error[property] !== null) {\r\n                setError(property, {\r\n                  type: 'manual',\r\n                  message: res.data.error[property]\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\r\n            ability.update(res.data.user.ability)\r\n            dispatch(handleLogin(data))\r\n            history.push('/')\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual',\r\n            message: `Please enter a valid ${key}`\r\n          })\r\n        }\r\n        if (key === 'terms' && data.terms === false) {\r\n          setError('terms', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n\r\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Controller\r\n                  id='username'\r\n                  name='username'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input autoFocus placeholder='johndoe' invalid={errors.username && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.username ? <FormFeedback>{errors.username.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='email'\r\n                  name='email'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input type='email' placeholder='john@example.com' invalid={errors.email && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.email ? <FormFeedback>{errors.email.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Controller\r\n                  name='terms'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='terms' type='checkbox' checked={field.value} invalid={errors.terms && true} />\r\n                  )}\r\n                />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' block color='primary'>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/login'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}