{"version":3,"sources":["views/forms/form-elements/number-input/NumberInputSize.js","views/forms/form-elements/number-input/NumberInputBasic.js","views/forms/form-elements/number-input/NumberInputMinMax.js","views/forms/form-elements/number-input/NumberInputFormat.js","views/forms/form-elements/number-input/NumberInputColors.js","views/forms/form-elements/number-input/NumberInputDecimal.js","views/forms/form-elements/number-input/NumberInputControlled.js","views/forms/form-elements/number-input/index.js","@core/components/breadcrumbs/index.js"],"names":["NumberInputSize","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","className","Label","for","InputNumber","defaultValue","upHandler","Plus","id","downHandler","Minus","NumberInputBasic","disabled","readOnly","NumberInputMinMax","min","max","NumberInputFormat","parser","num","cells","toString","split","replace","formatter","concat","colors","NumberInputColors","map","color","NumberInputDecimal","step","NumberInputControlled","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","isDisabled","setIsDisabled","_useState5","_useState6","isReadOnly","setIsReadOnly","onChange","Button","size","onClick","NumberInput","Fragment","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","md","sm","xs","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar"],"mappings":"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","file":"static/js/134.909cd141.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputSize = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Sizes</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='d-flex flex-wrap'>\r\n          <div className='me-2'>\r\n            <Label className='form-label' for='lg-number-input'>\r\n              Large Input\r\n            </Label>\r\n            <InputNumber\r\n              defaultValue={10}\r\n              className='input-lg'\r\n              upHandler={<Plus />}\r\n              id='lg-number-input'\r\n              downHandler={<Minus />}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Label className='form-label' for='default-number-input'>\r\n              Default Input\r\n            </Label>\r\n            <InputNumber defaultValue={10} upHandler={<Plus />} id='default-number-input' downHandler={<Minus />} />\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputSize\r\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputBasic = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <div>\n            <Label className='form-label' for='basic-number-input'>\n              Basic Input\n            </Label>\n            <InputNumber id='basic-number-input' defaultValue={10} upHandler={<Plus />} downHandler={<Minus />} />\n          </div>\n          <div>\n            <Label className='form-label' for='disabled-number-input'>\n              Disabled Input\n            </Label>\n            <InputNumber\n              disabled\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='disabled-number-input'\n            />\n          </div>\n          <div>\n            <Label className='form-label' for='readOnly-number-input'>\n              ReadOnly Input\n            </Label>\n            <InputNumber\n              readOnly\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='readOnly-number-input'\n            />\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputBasic\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputMinMax = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Min Max</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='min-max-number-input'>\n            Min Max Input\n          </Label>\n          <InputNumber\n            min={0}\n            max={10}\n            defaultValue={5}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='min-max-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputMinMax\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputFormat = () => {\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n\n  const format = num => {\n    return `$ ${numberWithCommas(num)}`\n  }\n\n  const parser = num => {\n    const cells = num.toString().split(' ')\n    if (!cells[1]) {\n      return num\n    }\n\n    const parsed = cells[1].replace(/,*/g, '')\n\n    return parsed\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Formatting</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='formatting-number-input'>\n            Formatting Input\n          </Label>\n          <InputNumber\n            parser={parser}\n            defaultValue={5}\n            formatter={format}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='formatting-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputFormat\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info']\n\nconst NumberInputColors = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Colors</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          {colors.map(color => (\n            <div key={color}>\n              <Label className='form-label text-capitalize' for={`${color}-number-input`}>\n                {color} Input\n              </Label>\n              <InputNumber\n                defaultValue={10}\n                upHandler={<Plus />}\n                downHandler={<Minus />}\n                id={`${color}-number-input`}\n                className={`input-${color}`}\n              />\n            </div>\n          ))}\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputColors\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputDecimal = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Decimal</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='decimal-number-input'>\n            Decimal Input\n          </Label>\n          <InputNumber\n            step={0.1}\n            defaultValue={10}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='decimal-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputDecimal\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label, Button } from 'reactstrap'\n\nconst NumberInputControlled = () => {\n  const [value, setValue] = useState(1)\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(false)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='controlled-number-input'>\n            Controlled Input\n          </Label>\n          <InputNumber\n            value={value}\n            upHandler={<Plus />}\n            disabled={isDisabled}\n            readOnly={isReadOnly}\n            downHandler={<Minus />}\n            id='controlled-number-input'\n            onChange={value => setValue(value)}\n          />\n        </div>\n        <div className='demo-inline-spacing'>\n          <Button size='sm' color='primary' onClick={() => setIsDisabled(!isDisabled)}>\n            Toggle Disabled\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setIsReadOnly(!isReadOnly)}>\n            Toggle ReadOnly\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setValue(10)}>\n            Set Value to 10\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputControlled\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport NumberInputSize from './NumberInputSize'\nimport NumberInputBasic from './NumberInputBasic'\nimport NumberInputMinMax from './NumberInputMinMax'\nimport NumberInputFormat from './NumberInputFormat'\nimport NumberInputColors from './NumberInputColors'\nimport NumberInputDecimal from './NumberInputDecimal'\nimport NumberInputControlled from './NumberInputControlled'\n\n// ** Styles\nimport '@styles/react/libs/input-number/input-number.scss'\n\nconst NumberInput = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Number Input' breadCrumbParent='Form Elements' breadCrumbActive='Number Input' />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <NumberInputBasic />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputControlled />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputDecimal />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputMinMax />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputSize />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputFormat />\n        </Col>\n        <Col xs='12'>\n          <NumberInputColors />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default NumberInput\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}