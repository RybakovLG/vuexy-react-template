{"version":3,"sources":["views/apps/calendar/Calendar.js","views/apps/calendar/SidebarLeft.js","views/apps/calendar/AddEventSidebar.js","views/apps/calendar/index.js","assets/images/pages/calendar-illustration.png"],"names":["ToastComponent","_ref","title","icon","color","_jsx","Fragment","children","className","_jsxs","Avatar","size","Calendar","props","calendarRef","useRef","store","isRtl","dispatch","calendarsColor","calendarApi","setCalendarApi","handleAddEventSidebar","blankEvent","toggleSidebar","selectEvent","updateEvent","useEffect","current","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","_ref2","calendarEvent","event","colorName","_def","extendedProps","calendar","concat","eventClick","_ref3","clickedEvent","customButtons","sidebarToggle","text","Menu","click","dateClick","info","ev","date","eventDrop","_ref4","droppedEvent","toast","success","Check","autoClose","hideProgressBar","closeButton","eventResize","_ref5","resizedEvent","ref","direction","Card","CardBody","FullCalendar","_objectSpread","memo","filters","label","SidebarLeft","updateFilter","updateAllFilters","Button","block","onClick","Input","id","type","checked","selectedCalendars","onChange","e","target","Label","for","map","filter","classnames","_defineProperty","includes","src","illustration","alt","AddEventSidebar","open","addEvent","removeEvent","refetchEvents","selectedEvent","_useForm","useForm","defaultValues","control","setError","setValue","getValues","handleSubmit","errors","formState","_useState","useState","_useState2","_slicedToArray","url","setUrl","_useState3","_useState4","desc","setDesc","_useState5","_useState6","guests","setGuests","_useState7","_useState8","allDay","setAllDay","_useState9","_useState10","location","setLocation","_useState11","Date","_useState12","endPicker","setEndPicker","_useState13","_useState14","startPicker","setStartPicker","_useState15","value","_useState16","calendarLabel","setCalendarLabel","guestsOptions","avatar","img1","img2","img3","img4","img5","img6","handleUpdateEvent","eventToUpdate","display","undefined","description","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","index","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","handleDeleteEvent","eventId","remove","error","Trash","EventActions","isObjEmpty","outline","CloseBtn","X","Modal","isOpen","toggle","onOpened","onClosed","contentClassName","modalClassName","ModalHeader","close","tag","PerfectScrollbar","options","wheelPropagation","ModalBody","Form","onSubmit","data","obj","handleAddEvent","Controller","name","render","field","placeholder","invalid","Select","theme","selectThemeColors","classNamePrefix","isClearable","components","Option","_objectWithoutProperties","_excluded","Flatpickr","required","enableTime","dateFormat","isMulti","_toConsumableArray","_excluded2","img","rows","Business","Holiday","Personal","Family","ETC","CalendarComponent","useDispatch","useSelector","state","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","_useRTL","useRTL","val","fetchEvents","Row","Col","show"],"mappings":"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","file":"static/js/61.2fde5d0d.chunk.js","sourcesContent":["// ** React Import\nimport { useEffect, useRef, memo, Fragment } from 'react'\n\n// ** Full Calendar & it's Plugins\nimport FullCalendar from '@fullcalendar/react'\nimport listPlugin from '@fullcalendar/list'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { toast } from 'react-toastify'\nimport { Card, CardBody } from 'reactstrap'\nimport { Menu, Check } from 'react-feather'\n\n// ** Toast Component\nconst ToastComponent = ({ title, icon, color }) => (\n  <Fragment>\n    <div className='toastify-header pb-0'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color={color} icon={icon} />\n        <h6 className='toast-title'>{title}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Calendar = props => {\n  // ** Refs\n  const calendarRef = useRef(null)\n\n  // ** Props\n  const {\n    store,\n    isRtl,\n    dispatch,\n    calendarsColor,\n    calendarApi,\n    setCalendarApi,\n    handleAddEventSidebar,\n    blankEvent,\n    toggleSidebar,\n    selectEvent,\n    updateEvent\n  } = props\n\n  // ** UseEffect checks for CalendarAPI Update\n  useEffect(() => {\n    if (calendarApi === null) {\n      setCalendarApi(calendarRef.current.getApi())\n    }\n  }, [calendarApi])\n\n  // ** calendarOptions(Props)\n  const calendarOptions = {\n    events: store.events.length ? store.events : [],\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n    initialView: 'dayGridMonth',\n    headerToolbar: {\n      start: 'sidebarToggle, prev,next, title',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n    },\n    /*\n      Enable dragging and resizing event\n      ? Docs: https://fullcalendar.io/docs/editable\n    */\n    editable: true,\n\n    /*\n      Enable resizing event from start\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\n    */\n    eventResizableFromStart: true,\n\n    /*\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\n      ? Docs: https://fullcalendar.io/docs/dragScroll\n    */\n    dragScroll: true,\n\n    /*\n      Max number of events within a given day\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\n    */\n    dayMaxEvents: 2,\n\n    /*\n      Determines if day names and week names are clickable\n      ? Docs: https://fullcalendar.io/docs/navLinks\n    */\n    navLinks: true,\n\n    eventClassNames({ event: calendarEvent }) {\n      // eslint-disable-next-line no-underscore-dangle\n      const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar]\n\n      return [\n        // Background Color\n        `bg-light-${colorName}`\n      ]\n    },\n\n    eventClick({ event: clickedEvent }) {\n      dispatch(selectEvent(clickedEvent))\n      handleAddEventSidebar()\n\n      // * Only grab required field otherwise it goes in infinity loop\n      // ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\n      // event.value = grabEventDataFromEventApi(clickedEvent)\n\n      // eslint-disable-next-line no-use-before-define\n      // isAddNewEventSidebarActive.value = true\n    },\n\n    customButtons: {\n      sidebarToggle: {\n        text: <Menu className='d-xl-none d-block' />,\n        click() {\n          toggleSidebar(true)\n        }\n      }\n    },\n\n    dateClick(info) {\n      const ev = blankEvent\n      ev.start = info.date\n      ev.end = info.date\n      dispatch(selectEvent(ev))\n      handleAddEventSidebar()\n    },\n\n    /*\n      Handle event drop (Also include dragged event)\n      ? Docs: https://fullcalendar.io/docs/eventDrop\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\n    */\n    eventDrop({ event: droppedEvent }) {\n      dispatch(updateEvent(droppedEvent))\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n        icon: false,\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeButton: false\n      })\n    },\n\n    /*\n      Handle event resize\n      ? Docs: https://fullcalendar.io/docs/eventResize\n    */\n    eventResize({ event: resizedEvent }) {\n      dispatch(updateEvent(resizedEvent))\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n        icon: false,\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeButton: false\n      })\n    },\n\n    ref: calendarRef,\n\n    // Get direction from app state (store)\n    direction: isRtl ? 'rtl' : 'ltr'\n  }\n\n  return (\n    <Card className='shadow-none border-0 mb-0 rounded-0'>\n      <CardBody className='pb-0'>\n        <FullCalendar {...calendarOptions} />{' '}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default memo(Calendar)\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { CardBody, Button, Input, Label } from 'reactstrap'\r\n\r\n// ** illustration import\r\nimport illustration from '@src/assets/images/pages/calendar-illustration.png'\r\n\r\n// ** Filters Checkbox Array\r\nconst filters = [\r\n  { label: 'Personal', color: 'danger', className: 'form-check-danger mb-1' },\r\n  { label: 'Business', color: 'primary', className: 'form-check-primary mb-1' },\r\n  { label: 'Family', color: 'warning', className: 'form-check-warning mb-1' },\r\n  { label: 'Holiday', color: 'success', className: 'form-check-success mb-1' },\r\n  { label: 'ETC', color: 'info', className: 'form-check-info' }\r\n]\r\n\r\nconst SidebarLeft = props => {\r\n  // ** Props\r\n  const { handleAddEventSidebar, toggleSidebar, updateFilter, updateAllFilters, store, dispatch } = props\r\n\r\n  // ** Function to handle Add Event Click\r\n  const handleAddEventClick = () => {\r\n    toggleSidebar(false)\r\n    handleAddEventSidebar()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='sidebar-wrapper'>\r\n        <CardBody className='card-body d-flex justify-content-center my-sm-0 mb-3'>\r\n          <Button color='primary' block onClick={handleAddEventClick}>\r\n            <span className='align-middle'>Add Event</span>\r\n          </Button>\r\n        </CardBody>\r\n        <CardBody>\r\n          <h5 className='section-label mb-1'>\r\n            <span className='align-middle'>Filter</span>\r\n          </h5>\r\n          <div className='form-check mb-1'>\r\n            <Input\r\n              id='view-all'\r\n              type='checkbox'\r\n              label='View All'\r\n              className='select-all'\r\n              checked={store.selectedCalendars.length === filters.length}\r\n              onChange={e => dispatch(updateAllFilters(e.target.checked))}\r\n            />\r\n            <Label className='form-check-label' for='view-all'>\r\n              View All\r\n            </Label>\r\n          </div>\r\n          <div className='calendar-events-filter'>\r\n            {filters.length &&\r\n              filters.map(filter => {\r\n                return (\r\n                  <div\r\n                    key={`${filter.label}-key`}\r\n                    className={classnames('form-check', {\r\n                      [filter.className]: filter.className\r\n                    })}\r\n                  >\r\n                    <Input\r\n                      type='checkbox'\r\n                      key={filter.label}\r\n                      label={filter.label}\r\n                      className='input-filter'\r\n                      id={`${filter.label}-event`}\r\n                      checked={store.selectedCalendars.includes(filter.label)}\r\n                      onChange={() => {\r\n                        dispatch(updateFilter(filter.label))\r\n                      }}\r\n                    />\r\n                    <Label className='form-check-label' for={`${filter.label}-event`}>\r\n                      {filter.label}\r\n                    </Label>\r\n                  </div>\r\n                )\r\n              })}\r\n          </div>\r\n        </CardBody>\r\n      </div>\r\n      <div className='mt-auto'>\r\n        <img className='img-fluid' src={illustration} alt='illustration' />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SidebarLeft\r\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { toast } from 'react-toastify'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Check } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors, isObjEmpty } from '@utils'\n\n// ** Avatar Images\nimport img1 from '@src/assets/images/avatars/1-small.png'\nimport img2 from '@src/assets/images/avatars/3-small.png'\nimport img3 from '@src/assets/images/avatars/5-small.png'\nimport img4 from '@src/assets/images/avatars/7-small.png'\nimport img5 from '@src/assets/images/avatars/9-small.png'\nimport img6 from '@src/assets/images/avatars/11-small.png'\n\n// ** Styles Imports\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\n// ** Toast Component\nconst ToastComponent = ({ title, icon, color }) => (\n  <Fragment>\n    <div className='toastify-header pb-0'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color={color} icon={icon} />\n        <h6 className='toast-title'>{title}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst AddEventSidebar = props => {\n  // ** Props\n  const {\n    open,\n    store,\n    dispatch,\n    addEvent,\n    calendarApi,\n    selectEvent,\n    updateEvent,\n    removeEvent,\n    refetchEvents,\n    calendarsColor,\n    handleAddEventSidebar\n  } = props\n\n  // ** Vars & Hooks\n  const selectedEvent = store.selectedEvent,\n    {\n      control,\n      setError,\n      setValue,\n      getValues,\n      handleSubmit,\n      formState: { errors }\n    } = useForm({\n      defaultValues: { title: '' }\n    })\n\n  // ** States\n  const [url, setUrl] = useState('')\n  const [desc, setDesc] = useState('')\n  const [guests, setGuests] = useState({})\n  const [allDay, setAllDay] = useState(false)\n  const [location, setLocation] = useState('')\n  const [endPicker, setEndPicker] = useState(new Date())\n  const [startPicker, setStartPicker] = useState(new Date())\n  const [calendarLabel, setCalendarLabel] = useState([{ value: 'Business', label: 'Business', color: 'primary' }])\n\n  // ** Select Options\n  const options = [\n    { value: 'Business', label: 'Business', color: 'primary' },\n    { value: 'Personal', label: 'Personal', color: 'danger' },\n    { value: 'Family', label: 'Family', color: 'warning' },\n    { value: 'Holiday', label: 'Holiday', color: 'success' },\n    { value: 'ETC', label: 'ETC', color: 'info' }\n  ]\n\n  const guestsOptions = [\n    { value: 'Donna Frank', label: 'Donna Frank', avatar: img1 },\n    { value: 'Jane Foster', label: 'Jane Foster', avatar: img2 },\n    { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: img3 },\n    { value: 'Lori Spears', label: 'Lori Spears', avatar: img4 },\n    { value: 'Sandy Vega', label: 'Sandy Vega', avatar: img5 },\n    { value: 'Cheryl May', label: 'Cheryl May', avatar: img6 }\n  ]\n\n  // ** Custom select components\n  const OptionComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <span className={`bullet bullet-${data.color} bullet-sm me-50`}></span>\n        {data.label}\n      </components.Option>\n    )\n  }\n\n  const GuestsComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-1' size='sm' img={data.avatar} />\n          <div>{data.label}</div>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Adds New Event\n  const handleAddEvent = () => {\n    const obj = {\n      title: getValues('title'),\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: calendarLabel[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    }\n    dispatch(addEvent(obj))\n    refetchEvents()\n    handleAddEventSidebar()\n    toast.success(<ToastComponent title='Event Added' color='success' icon={<Check />} />, {\n      icon: false,\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** Reset Input Values on Close\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}))\n    setValue('title', '')\n    setAllDay(false)\n    setUrl('')\n    setLocation('')\n    setDesc('')\n    setGuests({})\n    setCalendarLabel([{ value: 'Business', label: 'Business', color: 'primary' }])\n    setStartPicker(new Date())\n    setEndPicker(new Date())\n  }\n\n  // ** Set sidebar fields\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\n        } else {\n          return { value: 'Business', label: 'Business', color: 'primary' }\n        }\n      }\n      setValue('title', selectedEvent.title || getValues('title'))\n      setAllDay(selectedEvent.allDay || allDay)\n      setUrl(selectedEvent.url || url)\n      setLocation(selectedEvent.extendedProps.location || location)\n      setDesc(selectedEvent.extendedProps.description || desc)\n      setGuests(selectedEvent.extendedProps.guests || guests)\n      setStartPicker(new Date(selectedEvent.start))\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\n      setCalendarLabel([resolveLabel()])\n    }\n  }\n\n  // ** (UI) updateEventInCalendar\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\n\n    // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index]\n      existingEvent.setProp(propName, updatedEventData[propName])\n    }\n\n    // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\n      allDay: updatedEventData.allDay\n    })\n\n    // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index]\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\n    }\n  }\n\n  // ** Updates Event in Store\n  const handleUpdateEvent = () => {\n    if (getValues('title').length) {\n      const eventToUpdate = {\n        id: selectedEvent.id,\n        title: getValues('title'),\n        allDay,\n        start: startPicker,\n        end: endPicker,\n        url,\n        display: allDay === false ? 'block' : undefined,\n        extendedProps: {\n          location,\n          description: desc,\n          guests,\n          calendar: calendarLabel[0].label\n        }\n      }\n\n      const propsToUpdate = ['id', 'title', 'url']\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\n      dispatch(updateEvent(eventToUpdate))\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\n\n      handleAddEventSidebar()\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n        icon: false,\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeButton: false\n      })\n    } else {\n      setError('title', {\n        type: 'manual'\n      })\n    }\n  }\n\n  // ** (UI) removeEventInCalendar\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove()\n  }\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id))\n    removeEventInCalendar(selectedEvent.id)\n    handleAddEventSidebar()\n    toast.error(<ToastComponent title='Event Removed' color='danger' icon={<Trash />} />, {\n      icon: false,\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** Event Action buttons\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n      return (\n        <Fragment>\n          <Button className='me-1' type='submit' color='primary'>\n            Add\n          </Button>\n          <Button color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\n            Cancel\n          </Button>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button className='me-1' color='primary' onClick={handleUpdateEvent}>\n            Update\n          </Button>\n          <Button color='danger' onClick={handleDeleteEvent} outline>\n            Delete\n          </Button>\n        </Fragment>\n      )\n    }\n  }\n\n  // ** Close BTN\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      className='sidebar-lg'\n      toggle={handleAddEventSidebar}\n      onOpened={handleSelectedEvent}\n      onClosed={handleResetInputValues}\n      contentClassName='p-0 overflow-hidden'\n      modalClassName='modal-slide-in event-sidebar'\n    >\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add'} Event\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <Form\n            onSubmit={handleSubmit(data => {\n              if (data.title.length) {\n                if (isObjEmpty(errors)) {\n                  if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n                    handleAddEvent()\n                  } else {\n                    handleUpdateEvent()\n                  }\n                  handleAddEventSidebar()\n                }\n              } else {\n                setError('title', {\n                  type: 'manual'\n                })\n              }\n            })}\n          >\n            <div className='mb-1'>\n              <Label className='form-label' for='title'>\n                Title <span className='text-danger'>*</span>\n              </Label>\n              <Controller\n                name='title'\n                control={control}\n                render={({ field }) => (\n                  <Input id='title' placeholder='Title' invalid={errors.title && true} {...field} />\n                )}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='label'>\n                Label\n              </Label>\n              <Select\n                id='label'\n                value={calendarLabel}\n                options={options}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                isClearable={false}\n                onChange={data => setCalendarLabel([data])}\n                components={{\n                  Option: OptionComponent\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='startDate'>\n                Start Date\n              </Label>\n              <Flatpickr\n                required\n                id='startDate'\n                name='startDate'\n                className='form-control'\n                onChange={date => setStartPicker(date[0])}\n                value={startPicker}\n                options={{\n                  enableTime: allDay === false,\n                  dateFormat: 'Y-m-d H:i'\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='endDate'>\n                End Date\n              </Label>\n              <Flatpickr\n                required\n                id='endDate'\n                // tag={Flatpickr}\n                name='endDate'\n                className='form-control'\n                onChange={date => setEndPicker(date[0])}\n                value={endPicker}\n                options={{\n                  enableTime: allDay === false,\n                  dateFormat: 'Y-m-d H:i'\n                }}\n              />\n            </div>\n\n            <div className='form-switch mb-1'>\n              <Input\n                id='allDay'\n                type='switch'\n                className='me-1'\n                checked={allDay}\n                name='customSwitch'\n                onChange={e => setAllDay(e.target.checked)}\n              />\n              <Label className='form-label' for='allDay'>\n                All Day\n              </Label>\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='eventURL'>\n                Event URL\n              </Label>\n              <Input\n                type='url'\n                id='eventURL'\n                value={url}\n                onChange={e => setUrl(e.target.value)}\n                placeholder='https://www.google.com'\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='guests'>\n                Guests\n              </Label>\n              <Select\n                isMulti\n                id='guests'\n                className='react-select'\n                classNamePrefix='select'\n                isClearable={false}\n                options={guestsOptions}\n                theme={selectThemeColors}\n                value={guests.length ? [...guests] : null}\n                onChange={data => setGuests([...data])}\n                components={{\n                  Option: GuestsComponent\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='location'>\n                Location\n              </Label>\n              <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='Office' />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='description'>\n                Description\n              </Label>\n              <Input\n                type='textarea'\n                name='text'\n                id='description'\n                rows='3'\n                value={desc}\n                onChange={e => setDesc(e.target.value)}\n                placeholder='Description'\n              />\n            </div>\n            <div className='d-flex mb-1'>\n              <EventActions />\n            </div>\n          </Form>\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default AddEventSidebar\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-calendar.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Business: 'primary',\r\n  Holiday: 'success',\r\n  Personal: 'danger',\r\n  Family: 'warning',\r\n  ETC: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.calendar)\r\n\r\n  // ** states\r\n  const [calendarApi, setCalendarApi] = useState(null)\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\r\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row className='g-0'>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\n","export default __webpack_public_path__ + \"static/media/calendar-illustration.42be42ce.png\";"],"sourceRoot":""}