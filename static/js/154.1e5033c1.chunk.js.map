{"version":3,"sources":["views/tables/data-tables/basic/TableExpandable.js","views/tables/data-tables/basic/TableZeroConfig.js","views/tables/data-tables/basic/AddNewModal.js","views/tables/data-tables/basic/TableWithButtons.js","views/tables/data-tables/basic/TableMultilingual.js","views/tables/data-tables/basic/TableColumnReorder.js","views/tables/data-tables/basic/index.js"],"names":["DataTableWithButtons","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","className","DataTable","noHeader","pagination","data","expandableRows","columns","expandOnRowClicked","sortIcon","ChevronDown","size","paginationComponent","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","paginationDefaultPage","expandableRowsComponent","ExpandableTable","paginationRowsPerPageOptions","DataTablesBasic","basicColumns","AddNewModal","_ref","open","handleModal","Date","Picker","setPicker","CloseBtn","X","onClick","Modal","isOpen","toggle","modalClassName","contentClassName","ModalHeader","close","ModalBody","Label","for","InputGroup","InputGroupText","User","Input","id","placeholder","Briefcase","Mail","type","Calendar","Flatpickr","value","onChange","date","DollarSign","Button","color","outline","BootstrapCheckbox","forwardRef","props","ref","_objectSpread","modal","setModal","_useState3","_useState4","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","filteredData","setFilteredData","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","concat","setAttribute","encodeURI","click","Fragment","UncontrolledButtonDropdown","DropdownToggle","caret","Share","DropdownMenu","DropdownItem","Printer","FileText","Grid","File","Copy","Plus","Row","Col","md","sm","bsSize","e","target","updatedData","status","title","length","filter","startsWith","full_name","toLowerCase","post","email","age","salary","start_date","includes","selectableRows","paginationPerPage","Math","ceil","selectableRowsComponent","t","useTranslation","Previous","Next","selectableRowsNoSelectAll","multiLingColumns","CardFooter","CardText","DataTablesReOrder","reOrderColumns","Tables","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","TableZeroConfig","TableWithButtons","TableExpandable","TableMultilingual"],"mappings":"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","file":"static/js/154.1e5033c1.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Table columns & Expandable Data\r\nimport ExpandableTable, { data, columns } from '../data'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\r\n\r\nconst DataTableWithButtons = () => {\r\n  // ** State\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n\r\n  // ** Function to handle filter\r\n  const handlePagination = page => {\r\n    setCurrentPage(page.selected)\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      previousLabel={''}\r\n      nextLabel={''}\r\n      forcePage={currentPage}\r\n      onPageChange={page => handlePagination(page)}\r\n      pageCount={10}\r\n      breakLabel={'...'}\r\n      pageRangeDisplayed={2}\r\n      marginPagesDisplayed={2}\r\n      activeClassName='active'\r\n      pageClassName='page-item'\r\n      breakClassName='page-item'\r\n      nextLinkClassName='page-link'\r\n      pageLinkClassName='page-link'\r\n      breakLinkClassName='page-link'\r\n      previousLinkClassName='page-link'\r\n      nextClassName='page-item next-item'\r\n      previousClassName='page-item prev-item'\r\n      containerClassName={'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1'}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Expandable Row</CardTitle>\r\n      </CardHeader>\r\n      <div className='react-dataTable'>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          data={data}\r\n          expandableRows\r\n          columns={columns}\r\n          expandOnRowClicked\r\n          className='react-dataTable'\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationComponent={CustomPagination}\r\n          paginationDefaultPage={currentPage + 1}\r\n          expandableRowsComponent={ExpandableTable}\r\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DataTableWithButtons\r\n","// ** Table Columns\r\nimport { data, basicColumns } from '../data'\r\n\r\n// ** Third Party Components\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\r\n\r\nconst DataTablesBasic = () => {\r\n  return (\r\n    <Card className='overflow-hidden'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Zero Configuration</CardTitle>\r\n      </CardHeader>\r\n      <div className='react-dataTable'>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          data={data}\r\n          columns={basicColumns}\r\n          className='react-dataTable'\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DataTablesBasic\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { User, Briefcase, Mail, Calendar, DollarSign, X } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Modal, Input, Label, Button, ModalHeader, ModalBody, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\nconst AddNewModal = ({ open, handleModal }) => {\r\n  // ** State\r\n  const [Picker, setPicker] = useState(new Date())\r\n\r\n  // ** Custom close btn\r\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={handleModal}\r\n      className='sidebar-sm'\r\n      modalClassName='modal-slide-in'\r\n      contentClassName='pt-0'\r\n    >\r\n      <ModalHeader className='mb-1' toggle={handleModal} close={CloseBtn} tag='div'>\r\n        <h5 className='modal-title'>New Record</h5>\r\n      </ModalHeader>\r\n      <ModalBody className='flex-grow-1'>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='full-name'>\r\n            Full Name\r\n          </Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <User size={15} />\r\n            </InputGroupText>\r\n            <Input id='full-name' placeholder='Bruce Wayne' />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='post'>\r\n            Post\r\n          </Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <Briefcase size={15} />\r\n            </InputGroupText>\r\n            <Input id='post' placeholder='Web Developer' />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='email'>\r\n            Email\r\n          </Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <Mail size={15} />\r\n            </InputGroupText>\r\n            <Input type='email' id='email' placeholder='brucewayne@email.com' />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='joining-date'>\r\n            Joining Date\r\n          </Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <Calendar size={15} />\r\n            </InputGroupText>\r\n            <Flatpickr className='form-control' id='joining-date' value={Picker} onChange={date => setPicker(date)} />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='salary'>\r\n            Salary\r\n          </Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <DollarSign size={15} />\r\n            </InputGroupText>\r\n            <Input type='number' id='salary' />\r\n          </InputGroup>\r\n        </div>\r\n        <Button className='me-1' color='primary' onClick={handleModal}>\r\n          Submit\r\n        </Button>\r\n        <Button color='secondary' onClick={handleModal} outline>\r\n          Cancel\r\n        </Button>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddNewModal\r\n","// ** React Imports\r\nimport { Fragment, useState, forwardRef } from 'react'\r\n\r\n// ** Table Data & Columns\r\nimport { data, columns } from '../data'\r\n\r\n// ** Add New Modal Component\r\nimport AddNewModal from './AddNewModal'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className='form-check'>\r\n    <Input type='checkbox' ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\nconst DataTableWithButtons = () => {\r\n  // ** States\r\n  const [modal, setModal] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [filteredData, setFilteredData] = useState([])\r\n\r\n  // ** Function to handle Modal toggle\r\n  const handleModal = () => setModal(!modal)\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    setSearchValue(value)\r\n\r\n    const status = {\r\n      1: { title: 'Current', color: 'light-primary' },\r\n      2: { title: 'Professional', color: 'light-success' },\r\n      3: { title: 'Rejected', color: 'light-danger' },\r\n      4: { title: 'Resigned', color: 'light-warning' },\r\n      5: { title: 'Applied', color: 'light-info' }\r\n    }\r\n\r\n    if (value.length) {\r\n      updatedData = data.filter(item => {\r\n        const startsWith =\r\n          item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.post.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.age.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includes =\r\n          item.full_name.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.post.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.age.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.salary.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.start_date.toLowerCase().includes(value.toLowerCase()) ||\r\n          status[item.status].title.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData(updatedData)\r\n      setSearchValue(value)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle Pagination\r\n  const handlePagination = page => {\r\n    setCurrentPage(page.selected)\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      previousLabel=''\r\n      nextLabel=''\r\n      forcePage={currentPage}\r\n      onPageChange={page => handlePagination(page)}\r\n      pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1}\r\n      breakLabel='...'\r\n      pageRangeDisplayed={2}\r\n      marginPagesDisplayed={2}\r\n      activeClassName='active'\r\n      pageClassName='page-item'\r\n      breakClassName='page-item'\r\n      nextLinkClassName='page-link'\r\n      pageLinkClassName='page-link'\r\n      breakLinkClassName='page-link'\r\n      previousLinkClassName='page-link'\r\n      nextClassName='page-item next-item'\r\n      previousClassName='page-item prev-item'\r\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\r\n    />\r\n  )\r\n\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = ','\r\n    const lineDelimiter = '\\n'\r\n    const keys = Object.keys(data[0])\r\n\r\n    result = ''\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement('a')\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = 'export.csv'\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv))\r\n    link.setAttribute('download', filename)\r\n    link.click()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\r\n          <CardTitle tag='h4'>DataTable with Buttons</CardTitle>\r\n          <div className='d-flex mt-md-0 mt-1'>\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle color='secondary' caret outline>\r\n                <Share size={15} />\r\n                <span className='align-middle ms-50'>Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>\r\n                  <Printer size={15} />\r\n                  <span className='align-middle ms-50'>Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100' onClick={() => downloadCSV(data)}>\r\n                  <FileText size={15} />\r\n                  <span className='align-middle ms-50'>CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Grid size={15} />\r\n                  <span className='align-middle ms-50'>Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <File size={15} />\r\n                  <span className='align-middle ms-50'>PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Copy size={15} />\r\n                  <span className='align-middle ms-50'>Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n            <Button className='ms-2' color='primary' onClick={handleModal}>\r\n              <Plus size={15} />\r\n              <span className='align-middle ms-50'>Add Record</span>\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        <Row className='justify-content-end mx-0'>\r\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n            <Label className='me-1' for='search-input'>\r\n              Search\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter mb-50'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            selectableRows\r\n            columns={columns}\r\n            paginationPerPage={7}\r\n            className='react-dataTable'\r\n            sortIcon={<ChevronDown size={10} />}\r\n            paginationDefaultPage={currentPage + 1}\r\n            paginationComponent={CustomPagination}\r\n            data={searchValue.length ? filteredData : data}\r\n            selectableRowsComponent={BootstrapCheckbox}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <AddNewModal open={modal} handleModal={handleModal} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DataTableWithButtons\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { data, multiLingColumns } from '../data'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport { useTranslation } from 'react-i18next'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardFooter, CardText, Input, Label, Row, Col } from 'reactstrap'\r\n\r\nconst DataTableWithButtons = () => {\r\n  // ** State\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [filteredData, setFilteredData] = useState([])\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  // ** Function to handle pagination\r\n  const handlePagination = page => {\r\n    setCurrentPage(page.selected)\r\n  }\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    const value = e.target.value\r\n    let updatedData = []\r\n    setSearchValue(value)\r\n\r\n    const status = {\r\n      1: { title: 'Current', color: 'light-primary' },\r\n      2: { title: 'Professional', color: 'light-success' },\r\n      3: { title: 'Rejected', color: 'light-danger' },\r\n      4: { title: 'Resigned', color: 'light-warning' },\r\n      5: { title: 'Applied', color: 'light-info' }\r\n    }\r\n\r\n    if (value.length) {\r\n      updatedData = data.filter(item => {\r\n        const startsWith =\r\n          item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.post.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.age.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includes =\r\n          item.full_name.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.post.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.age.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.salary.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.start_date.toLowerCase().includes(value.toLowerCase()) ||\r\n          status[item.status].title.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWith) {\r\n          return startsWith\r\n        } else if (!startsWith && includes) {\r\n          return includes\r\n        } else return null\r\n      })\r\n      setFilteredData(updatedData)\r\n      setSearchValue(value)\r\n    }\r\n  }\r\n\r\n  // ** Pagination Previous Component\r\n  const Previous = () => {\r\n    return (\r\n      <Fragment>\r\n        <span className='align-middle d-none d-md-inline-block'>{t('Prev')}</span>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  // ** Pagination Next Component\r\n  const Next = () => {\r\n    return (\r\n      <Fragment>\r\n        <span className='align-middle d-none d-md-inline-block'>{t('Next')}</span>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination Component\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      previousLabel={<Previous size={15} />}\r\n      nextLabel={<Next size={15} />}\r\n      forcePage={currentPage}\r\n      onPageChange={page => handlePagination(page)}\r\n      pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1}\r\n      breakLabel={'...'}\r\n      pageRangeDisplayed={2}\r\n      marginPagesDisplayed={2}\r\n      activeClassName={'active'}\r\n      pageClassName={'page-item'}\r\n      nextLinkClassName={'page-link'}\r\n      nextClassName={'page-item next'}\r\n      previousClassName={'page-item prev'}\r\n      previousLinkClassName={'page-link'}\r\n      pageLinkClassName={'page-link'}\r\n      breakClassName='page-item'\r\n      breakLinkClassName='page-link'\r\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pe-1 mt-1'}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className='border-bottom'>\r\n        <CardTitle tag='h4'>Multilingual</CardTitle>\r\n      </CardHeader>\r\n      <Row className='justify-content-end mx-0'>\r\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n          <Label className='me-1' for='search-input-1'>\r\n            {t('Search')}\r\n          </Label>\r\n          <Input\r\n            className='dataTable-filter mb-50'\r\n            type='text'\r\n            bsSize='sm'\r\n            id='search-input-1'\r\n            value={searchValue}\r\n            onChange={handleFilter}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className='react-dataTable'>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          selectableRowsNoSelectAll\r\n          columns={multiLingColumns}\r\n          className='react-dataTable'\r\n          paginationPerPage={7}\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationDefaultPage={currentPage + 1}\r\n          paginationComponent={CustomPagination}\r\n          data={searchValue.length ? filteredData : data}\r\n        />\r\n      </div>\r\n      <CardFooter>\r\n        <CardText className='mb-0'>\r\n          <span className='fw-bold'>Note:</span> <span>Use Intl Dropdown in Navbar to change table language</span>\r\n        </CardText>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DataTableWithButtons\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { data, reOrderColumns } from '../data'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\r\n\r\nconst DataTablesReOrder = () => {\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n\r\n  // ** Function to handle Pagination\r\n  const handlePagination = page => {\r\n    setCurrentPage(page.selected)\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      nextLabel=''\r\n      breakLabel='...'\r\n      previousLabel=''\r\n      pageRangeDisplayed={2}\r\n      forcePage={currentPage}\r\n      marginPagesDisplayed={2}\r\n      activeClassName='active'\r\n      pageClassName='page-item'\r\n      breakClassName='page-item'\r\n      nextLinkClassName='page-link'\r\n      pageLinkClassName='page-link'\r\n      breakLinkClassName='page-link'\r\n      previousLinkClassName='page-link'\r\n      nextClassName='page-item next-item'\r\n      previousClassName='page-item prev-item'\r\n      pageCount={Math.ceil(data.length / 7) || 1}\r\n      onPageChange={page => handlePagination(page)}\r\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <Card className='overflow-hidden'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Column ReOrder</CardTitle>\r\n      </CardHeader>\r\n      <div className='react-dataTable'>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          data={data}\r\n          columns={reOrderColumns}\r\n          className='react-dataTable'\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationComponent={CustomPagination}\r\n          paginationDefaultPage={currentPage + 1}\r\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DataTablesReOrder\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport TableExpandable from './TableExpandable'\r\nimport TableZeroConfig from './TableZeroConfig'\r\nimport TableWithButtons from './TableWithButtons'\r\nimport TableMultilingual from './TableMultilingual'\r\nimport DataTablesReOrder from './TableColumnReorder'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst Tables = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Datatables' breadCrumbParent='Home' breadCrumbActive='Datatables Basic' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <TableZeroConfig />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <DataTablesReOrder />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <TableWithButtons />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <TableExpandable />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <TableMultilingual />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tables\r\n"],"sourceRoot":""}