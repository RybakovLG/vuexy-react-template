{"version":3,"sources":["views/components/alerts/AlertIcon.js","views/components/alerts/AlertTitle.js","views/components/alerts/AlertColors.js","views/components/alerts/AlertExample.js","views/components/alerts/DefaultAlert.js","views/components/alerts/AlertDismissable.js","views/components/alerts/AlertUncontrolled.js","views/components/alerts/AlertSourceCode.js","views/components/alerts/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["AlertIcon","_jsx","className","children","Alert","color","_jsxs","Star","size","AlertTitle","href","onClick","e","preventDefault","AlertColors","AlertExample","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","inputTerm","setInputTerm","Label","htmlFor","Input","placeholder","value","onChange","target","length","isNaN","handleInput","isOpen","AlertCircle","DefaultAlert","AlertDismissable","toggle","AlertUncontrolled","UncontrolledAlert","defaultAlert","alertTitle","alertColors","alertDismissable","alertUncontrolled","alertIcon","alertExample","Alerts","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","title","code","CardText","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","Collapse"],"mappings":"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","file":"static/js/97.d2969ed6.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Star } from 'react-feather'\r\n\r\nconst AlertIcon = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary'>\r\n        <div className='alert-body d-flex align-items-center'>\r\n          <Star size={15} />\r\n          <span className='ms-50'>\r\n            Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertIcon\r\n","// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertTitle = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Lorem ipsum dolor sit amet</h4>\r\n        <div className='alert-body'>\r\n          Lorem ipsum dolor sit amet{' '}\r\n          <a className='alert-link' href='/' onClick={e => e.preventDefault()}>\r\n            consectetur\r\n          </a>{' '}\r\n          adipisicing elit. Ducimus, laborum!.\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertTitle\r\n","// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertColors = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary'>\r\n        <h4 className='alert-heading'>Primary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='secondary'>\r\n        <h4 className='alert-heading'>Secondary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='success'>\r\n        <h4 className='alert-heading'>Success</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='danger'>\r\n        <h4 className='alert-heading'>Danger</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Warning</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='info'>\r\n        <h4 className='alert-heading'>Info</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='dark'>\r\n        <h4 className='alert-heading'>Dark</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertColors\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Icons Imports\r\nimport { AlertCircle } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert, Label, Input } from 'reactstrap'\r\n\r\nconst AlertExample = () => {\r\n  // ** States\r\n  const [visible, setVisible] = useState(true)\r\n  const [inputTerm, setInputTerm] = useState('')\r\n\r\n  const handleInput = e => {\r\n    setInputTerm(e.target.value)\r\n\r\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\r\n      setVisible(true)\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <div className='mb-2'>\r\n        <Label className='form-label' htmlFor='numbers'>\r\n          Enter numbers only\r\n        </Label>\r\n        <Input className='w-25 h-25 ps-1' placeholder='0123456789' value={inputTerm} onChange={e => handleInput(e)} />\r\n      </div>\r\n      <Alert color='danger' isOpen={visible}>\r\n        <div className='alert-body'>\r\n          <AlertCircle size={15} />{' '}\r\n          <span className='ms-1'>\r\n            The value is <strong>invalid</strong> you can only enter numbers\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertExample\r\n","// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst DefaultAlert = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Good Morning!</span>\r\n          <span> Start your day with some alerts.</span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default DefaultAlert\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertDismissable = () => {\r\n  // ** State\r\n  const [visible, setVisible] = useState(true)\r\n\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary' isOpen={visible} toggle={() => setVisible(false)}>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertDismissable\r\n","// ** Reactstrap Imports\r\nimport { UncontrolledAlert } from 'reactstrap'\r\n\r\nconst AlertUncontrolled = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <UncontrolledAlert color='primary'>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </UncontrolledAlert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertUncontrolled\r\n","export const defaultAlert = (\r\n  <pre className='language-jsx'>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst DefaultAlert = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Good Morning!</span>\r\n          <span> Start your day with some alerts.</span>\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DefaultAlert\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertTitle = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertTitle = () => {\r\n  return (\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Lorem ipsum dolor sit amet</h4>\r\n        <div className='alert-body'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, laborum!.</div>\r\n      </Alert>\r\n  )\r\n}\r\nexport default AlertTitle\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertColors = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertColors = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='primary'>\r\n        <h4 className='alert-heading'>Primary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='secondary'>\r\n        <h4 className='alert-heading'>Secondary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='success'>\r\n        <h4 className='alert-heading'>Success</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='danger'>\r\n        <h4 className='alert-heading'>Danger</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Warning</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='info'>\r\n        <h4 className='alert-heading'>Info</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='dark'>\r\n        <h4 className='alert-heading'>Dark</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertDismissable = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertDismissable = () => {\r\n  const [visible, setVisible] = useState(true)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='info' isOpen={visible} toggle={() => setVisible(false)}>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertDismissable\r\n    `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertUncontrolled = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { UncontrolledAlert } from 'reactstrap'\r\n\r\nconst AlertUncontrolled = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <UncontrolledAlert color='danger'>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </UncontrolledAlert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertUncontrolled\r\n      `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertIcon = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\nimport { Star } from 'react-feather'\r\n\r\nconst AlertIcon = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <Star size={15} />\r\n          <span className='ms-1'>\r\n            Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertIcon\r\n        `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport { Alert,  Label, Input } from 'reactstrap'\r\nimport { AlertCircle } from 'react-feather'\r\n\r\nconst AlertExample = () => {\r\n  const [inputTerm, setInputTerm] = useState('')\r\n  const [visible, setVisible] = useState('')\r\n\r\n  const handleInput = e => {\r\n    setInputTerm(e.target.value)\r\n\r\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\r\n      setVisible(true)\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='mb-2'>\r\n        <Label className='form-label' htmlFor='numbers'>Enter numbers only</Label>\r\n        <Input\r\n          className='w-25 h-25 ps-1'\r\n          placeholder='0123456789'\r\n          value={inputTerm}\r\n          onChange={e => handleInput(e)}\r\n        />\r\n      </div>\r\n      <Alert color='danger' isOpen={visible}>\r\n        <div className='alert-body'>\r\n          <AlertCircle size={15} />{' '}\r\n          <span className='ms-1'>\r\n            the value is <strong>invalid</strong> you can only enter numbers\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertExample\r\n        `}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport AlertIcon from './AlertIcon'\r\nimport AlertTitle from './AlertTitle'\r\nimport AlertColors from './AlertColors'\r\nimport AlertExample from './AlertExample'\r\nimport DefaultAlert from './DefaultAlert'\r\nimport AlertDismissable from './AlertDismissable'\r\nimport AlertUncontrolled from './AlertUncontrolled'\r\n\r\n// ** Source Code\r\nimport {\r\n  alertIcon,\r\n  alertTitle,\r\n  alertColors,\r\n  defaultAlert,\r\n  alertExample,\r\n  alertDismissable,\r\n  alertUncontrolled\r\n} from './AlertSourceCode'\r\n\r\nconst Alerts = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Alerts' breadCrumbParent='Components' breadCrumbActive='Alerts' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Default' code={defaultAlert}>\r\n            <CardText>\r\n              Alerts are available for any length of text, as well as an optional dismiss button. Use <code>Alert</code>{' '}\r\n              Component & <code>color</code> prop for alert with all theme colors.\r\n            </CardText>\r\n            <DefaultAlert />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Title' code={alertTitle}>\r\n            <CardText>\r\n              Add a title to the alert with the <code>.alert-heading</code>\r\n            </CardText>\r\n            <AlertTitle />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Colors' code={alertColors}>\r\n            <CardText>\r\n              Use <code>color</code> prop to for alert with all theme colors.\r\n            </CardText>\r\n            <AlertColors />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Dismissable Alert' code={alertDismissable}>\r\n            <CardText>\r\n              Using <code>isOpen</code> and <code>toggle</code> you can create a dismissable alert.\r\n            </CardText>\r\n            <AlertDismissable />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Uncontrolled Alert' code={alertUncontrolled}>\r\n            <CardText>\r\n              For the most basic use-case an uncontrolled component can provide the functionality wanted without the\r\n              need to manage/control the state of the component. UncontrolledAlert does not require isOpen nor toggle\r\n              props to work.\r\n            </CardText>\r\n            <AlertUncontrolled />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icon' code={alertIcon}>\r\n            <AlertIcon />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Example' code={alertExample}>\r\n            <CardText>An example would be to have an input and when a condition is met, show the alert.</CardText>\r\n            <AlertExample />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Alerts\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}