{"version":3,"sources":["views/forms/form-elements/input-mask/DateMask.js","views/forms/form-elements/input-mask/TimeMask.js","views/forms/form-elements/input-mask/PhoneMask.js","views/forms/form-elements/input-mask/BlocksMask.js","views/forms/form-elements/input-mask/PrefixMask.js","views/forms/form-elements/input-mask/DelimitersMask.js","views/forms/form-elements/input-mask/CreditCardMask.js","views/forms/form-elements/input-mask/CustomDelimitersMask.js","views/forms/form-elements/input-mask/NumeralFormattingMask.js","views/forms/form-elements/input-mask/index.js","@core/components/breadcrumbs/index.js"],"names":["DateMask","_jsxs","Fragment","children","_jsx","Label","for","Cleave","className","placeholder","options","date","delimiter","datePattern","id","TimeMask","time","timePattern","PhoneMask","InputGroup","InputGroupText","phone","phoneRegionCode","BlocksMask","blocks","uppercase","PrefixMask","prefix","DelimitersMask","CreditCardMask","creditCard","CustomDelimitersMask","delimiters","NumeralFormattingMask","numeral","numeralThousandsGroupStyle","InputMask","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","CardHeader","CardTitle","tag","CardBody","xl","md","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","color","size","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar"],"mappings":"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","file":"static/js/132.95d458c9.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst DateMask = () => {\r\n  const options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\r\n  return (\r\n    <Fragment>\r\n      <Label for='date'>Date</Label>\r\n      <Cleave className='form-control' placeholder='2001-01-01' options={options} id='date' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DateMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst TimeMask = () => {\r\n  const options = { time: true, timePattern: ['h', 'm', 's'] }\r\n  return (\r\n    <Fragment>\r\n      <Label for='time'>Time</Label>\r\n      <Cleave className='form-control' placeholder='12:00:00' options={options} id='time' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TimeMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\n\r\n// ** Reactstrap Components\r\nimport { InputGroup, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst PhoneMask = () => {\r\n  const options = { phone: true, phoneRegionCode: 'US' }\r\n  return (\r\n    <Fragment>\r\n      <Label for='phone-number'>Phone Number</Label>\r\n      <InputGroup className='input-group-merge'>\r\n        <InputGroupText>US (+1)</InputGroupText>\r\n        <Cleave className='form-control' placeholder='1 234 567 8900' options={options} id='phone-number' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PhoneMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst BlocksMask = () => {\r\n  const options = { blocks: [4, 3, 3], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='blocks'>Blocks</Label>\r\n      <Cleave className='form-control' placeholder='Blocks [4, 3, 3]' options={options} id='blocks' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BlocksMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst PrefixMask = () => {\r\n  const options = { prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='prefix'>Prefix</Label>\r\n      <Cleave className='form-control' options={options} id='prefix' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PrefixMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst DelimitersMask = () => {\r\n  const options = { delimiter: 'Â·', blocks: [3, 3, 3], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='delimiters'>Delimiters</Label>\r\n      <Cleave className='form-control' placeholder=\"Delimiter: '.'\" options={options} id='delimiters' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DelimitersMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst CreditCardMask = () => {\r\n  const options = { creditCard: true }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Label for='credit-card'>Credit Card</Label>\r\n      <Cleave className='form-control' placeholder='0000 0000 0000 0000' options={options} id='credit-card' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CreditCardMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst CustomDelimitersMask = () => {\r\n  const options = { delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='custom-delimiters'>Custom Delimiters</Label>\r\n      <Cleave\r\n        className='form-control'\r\n        placeholder=\"Delimiter: ['.', '.', '-']\"\r\n        options={options}\r\n        id='custom-delimiters'\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CustomDelimitersMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst NumeralFormattingMask = () => {\r\n  const options = { numeral: true, numeralThousandsGroupStyle: 'thousand' }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Label for='numeral-formatting'>Numeral Formatting</Label>\r\n      <Cleave className='form-control' placeholder='10,000' options={options} id='numeral-formatting' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NumeralFormattingMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Demo Components\r\nimport DateMask from './DateMask'\r\nimport TimeMask from './TimeMask'\r\nimport PhoneMask from './PhoneMask'\r\nimport BlocksMask from './BlocksMask'\r\nimport PrefixMask from './PrefixMask'\r\nimport DelimitersMask from './DelimitersMask'\r\nimport CreditCardMask from './CreditCardMask'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport CustomDelimitersMask from './CustomDelimitersMask'\r\nimport NumeralFormattingMask from './NumeralFormattingMask'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\r\n\r\nconst InputMask = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Input Mask' breadCrumbParent='Form Elements' breadCrumbActive='Input Mask' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>Input Masks</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <CreditCardMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <PhoneMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <DateMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <TimeMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <NumeralFormattingMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <BlocksMask />\r\n                </Col>\r\n                <Col xl='4' md='6' sm='12'>\r\n                  <DelimitersMask />\r\n                </Col>\r\n                <Col xl='4' md='6' sm='12'>\r\n                  <CustomDelimitersMask />\r\n                </Col>\r\n                <Col xl='4' md='6' sm='12'>\r\n                  <PrefixMask />\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default InputMask\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}