{"version":3,"sources":["views/extensions/i18n/index.js","@core/components/extensions-header/index.js"],"names":["I18nExtension","_useTranslation","useTranslation","i18n","t","_jsxs","Fragment","children","_jsx","ExtensionsHeader","title","link","subTitle","Row","Col","sm","Card","CardHeader","CardTitle","tag","CardBody","className","Input","type","id","name","checked","language","onChange","changeLanguage","Label","for","props","href","target","rel"],"mappings":"qJAAA,qDA6FeA,UAjFO,WAEpB,IAAAC,EAAoBC,cAAZC,EAAIF,EAAJE,KAAMC,EAACH,EAADG,EAEd,OACEC,eAACC,WAAQ,CAAAC,SAAA,CACPC,cAACC,IAAgB,CACfC,MAAM,gBACNC,KAAK,6BACLC,SAAS,2DAGXJ,cAACK,KAAG,CAAAN,SACFC,cAACM,IAAG,CAACC,GAAG,KAAIR,SACVF,eAACW,IAAI,CAAAT,SAAA,CACHC,cAACS,IAAU,CAAAV,SACTC,cAACU,IAAS,CAACC,IAAI,KAAIZ,SAAC,oBAEtBF,eAACe,IAAQ,CAAAb,SAAA,CACPF,eAAA,OAAKgB,UAAU,mBAAkBd,SAAA,CAC/BF,eAAA,OAAKgB,UAAU,kBAAiBd,SAAA,CAC9BC,cAACc,IAAK,CACJC,KAAK,QACLC,GAAG,WACHC,KAAK,kBACLC,QAA2B,OAAlBvB,EAAKwB,SACdC,SAAU,kBAAMzB,EAAK0B,eAAe,KAAK,IAE3CrB,cAACsB,IAAK,CAACT,UAAU,mBAAmBU,IAAI,WAAUxB,SAAC,eAIrDF,eAAA,OAAKgB,UAAU,kBAAiBd,SAAA,CAC9BC,cAACc,IAAK,CACJC,KAAK,QACLC,GAAG,WACHC,KAAK,kBACLC,QAA2B,OAAlBvB,EAAKwB,SACdC,SAAU,kBAAMzB,EAAK0B,eAAe,KAAK,IAE3CrB,cAACsB,IAAK,CAACT,UAAU,mBAAmBU,IAAI,WAAUxB,SAAC,cAIrDF,eAAA,OAAKgB,UAAU,kBAAiBd,SAAA,CAC9BC,cAACc,IAAK,CACJC,KAAK,QACLC,GAAG,WACHC,KAAK,kBACLC,QAA2B,OAAlBvB,EAAKwB,SACdC,SAAU,kBAAMzB,EAAK0B,eAAe,KAAK,IAE3CrB,cAACsB,IAAK,CAACT,UAAU,mBAAmBU,IAAI,WAAUxB,SAAC,cAIrDF,eAAA,OAAKgB,UAAU,kBAAiBd,SAAA,CAC9BC,cAACc,IAAK,CACJC,KAAK,QACLC,GAAG,WACHC,KAAK,kBACLG,SAAU,kBAAMzB,EAAK0B,eAAe,KAAK,EACzCH,QAA2B,OAAlBvB,EAAKwB,WAEhBnB,cAACsB,IAAK,CAACT,UAAU,mBAAmBU,IAAI,WAAUxB,SAAC,qBAKvDF,eAAA,OAAKgB,UAAU,kBAAiBd,SAAA,CAC9BC,cAAA,MAAIa,UAAU,OAAMd,SAAC,UACpBH,EAAE,uBAQnB,C,mCC3FA,oBAwBeK,IAlBU,SAAAuB,GACvB,OACExB,cAACK,KAAG,CAACQ,UAAU,OAAMd,SACnBF,eAACS,IAAG,CAACC,GAAG,KAAKM,UAAU,QAAOd,SAAA,CAC5BC,cAAA,KAAGa,UAAU,qCAAqC,YAAU,kBAAiBd,SAC1EyB,EAAMtB,QAERsB,EAAMrB,KACLH,cAAA,KAAGyB,KAAMD,EAAMrB,KAAMuB,OAAO,SAASC,IAAI,sBAAqB5B,SAC3DyB,EAAMpB,WAGTJ,cAAA,KAAGa,UAAU,eAAcd,SAAEyB,EAAMpB,eAK7C,C","file":"static/js/147.7128d980.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Input, Label } from 'reactstrap'\r\n\r\nconst I18nExtension = () => {\r\n  // ** Hooks\r\n  const { i18n, t } = useTranslation()\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React i18next'\r\n        link='https://react.i18next.com/'\r\n        subTitle='The React i18next library provide hooks to use i18next'\r\n      />\r\n\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>Change Locale</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className='language-options'>\r\n                <div className='form-check mb-1'>\r\n                  <Input\r\n                    type='radio'\r\n                    id='radio-en'\r\n                    name='i18n-lang-radio'\r\n                    checked={i18n.language === 'en'}\r\n                    onChange={() => i18n.changeLanguage('en')}\r\n                  />\r\n                  <Label className='form-check-label' for='radio-en'>\r\n                    English\r\n                  </Label>\r\n                </div>\r\n                <div className='form-check mb-1'>\r\n                  <Input\r\n                    type='radio'\r\n                    id='radio-fr'\r\n                    name='i18n-lang-radio'\r\n                    checked={i18n.language === 'fr'}\r\n                    onChange={() => i18n.changeLanguage('fr')}\r\n                  />\r\n                  <Label className='form-check-label' for='radio-fr'>\r\n                    French\r\n                  </Label>\r\n                </div>\r\n                <div className='form-check mb-1'>\r\n                  <Input\r\n                    type='radio'\r\n                    id='radio-de'\r\n                    name='i18n-lang-radio'\r\n                    checked={i18n.language === 'de'}\r\n                    onChange={() => i18n.changeLanguage('de')}\r\n                  />\r\n                  <Label className='form-check-label' for='radio-de'>\r\n                    German\r\n                  </Label>\r\n                </div>\r\n                <div className='form-check mb-1'>\r\n                  <Input\r\n                    type='radio'\r\n                    id='radio-pt'\r\n                    name='i18n-lang-radio'\r\n                    onChange={() => i18n.changeLanguage('pt')}\r\n                    checked={i18n.language === 'pt'}\r\n                  />\r\n                  <Label className='form-check-label' for='radio-pt'>\r\n                    Portuguese\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n              <div className='border p-2 mt-3'>\r\n                <h5 className='mb-1'>Title</h5>\r\n                {t('text')}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default I18nExtension\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}