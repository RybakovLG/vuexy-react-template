{"version":3,"sources":["views/pages/authentication/Login.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","_ref","name","role","_jsxs","Fragment","children","_jsx","className","Avatar","size","color","icon","Coffee","defaultValues","password","loginEmail","Login","skin","useSkin","dispatch","useDispatch","history","useHistory","ability","useContext","AbilityContext","_useForm","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","concat","default","Row","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Alert","HelpCircle","top","right","UncontrolledTooltip","target","placement","Form","onSubmit","data","Object","values","every","field","length","useJwt","login","email","then","res","_objectSpread","userData","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","username","transition","Slide","hideProgressBar","autoClose","catch","err","console","log","key","type","Label","for","Controller","render","_ref2","Input","autoFocus","placeholder","invalid","_ref3","InputPasswordToggle","Button","block","Facebook","Twitter","Mail","GitHub","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","InputGroup","classnames","_defineProperty","InputGroupText","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/86.dcc5b0aa.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useContext, Fragment } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// ** Third Party Components\r\nimport { useDispatch } from 'react-redux'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\n\r\n// ** Actions\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Utils\r\nimport { getHomeRouteForLoggedInUser } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Form, Input, Label, Alert, Button, CardText, CardTitle, UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title fw-bold'>Welcome, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in as an {role} user to Vuexy. Now you can start to explore. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst defaultValues = {\r\n  password: 'admin',\r\n  loginEmail: 'admin@demo.com'\r\n}\r\n\r\nconst Login = () => {\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const ability = useContext(AbilityContext)\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      useJwt\r\n        .login({ email: data.loginEmail, password: data.password })\r\n        .then(res => {\r\n          const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n          dispatch(handleLogin(data))\r\n          ability.update(res.data.userData.ability)\r\n          history.push(getHomeRouteForLoggedInUser(data.role))\r\n          toast.success(\r\n            <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Welcome to Vuexy! 👋\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n            <Alert color='primary'>\r\n              <div className='alert-body font-small-2'>\r\n                <p>\r\n                  <small className='me-50'>\r\n                    <span className='fw-bold'>Admin:</span> admin@demo.com | admin\r\n                  </small>\r\n                </p>\r\n                <p>\r\n                  <small className='me-50'>\r\n                    <span className='fw-bold'>Client:</span> client@demo.com | client\r\n                  </small>\r\n                </p>\r\n              </div>\r\n              <HelpCircle\r\n                id='login-tip'\r\n                className='position-absolute'\r\n                size={18}\r\n                style={{ top: '10px', right: '10px' }}\r\n              />\r\n              <UncontrolledTooltip target='login-tip' placement='left'>\r\n                This is just for ACL demo purpose.\r\n              </UncontrolledTooltip>\r\n            </Alert>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='loginEmail'\r\n                  name='loginEmail'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      autoFocus\r\n                      type='email'\r\n                      placeholder='john@example.com'\r\n                      invalid={errors.loginEmail && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                  <Link to='/forgot-password'>\r\n                    <small>Forgot Password?</small>\r\n                  </Link>\r\n                </div>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='remember-me' />\r\n                <Label className='form-check-label' for='remember-me'>\r\n                  Remember Me\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' color='primary' block>\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>New on our platform?</span>\r\n              <Link to='/register'>\r\n                <span>Create an account</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}