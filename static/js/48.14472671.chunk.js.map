{"version":3,"sources":["views/extensions/import-export/Import.js","@core/components/extensions-header/index.js"],"names":["ErrorToast","_jsxs","Fragment","children","className","_jsx","Avatar","size","color","icon","X","role","Import","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","value","setValue","_useState5","_useState6","tableData","setTableData","_useState7","_useState8","filteredData","setFilteredData","_useDropzone","useDropzone","multiple","onDrop","result","reader","FileReader","onload","fileData","wb","XLSX","read","type","SheetNames","forEach","sheetName","arr","getTableData","utils","sheet_to_row_object_array","Sheets","length","endsWith","readAsBinaryString","toast","error","hideProgressBar","getRootProps","getInputProps","headArr","map","col","index","_toConsumableArray","Object","keys","dataArr","ExtensionsHeader","title","subTitle","link","Row","Col","sm","Card","CardBody","_objectSpread","DownloadCloud","href","onClick","e","preventDefault","CardHeader","CardTitle","tag","Label","for","Input","id","bsSize","onChange","data","target","filter","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","handleFilter","Table","responsive","head","renderTd","props","rel"],"mappings":"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","file":"static/js/48.14472671.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport XLSX from 'xlsx'\r\nimport { toast } from 'react-toastify'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>a second ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        ðŸ‘‹ You can only upload <span className='fw-bolder'>.xlsx</span>, <span className='fw-bolder'>.xls</span> &{' '}\r\n        <span className='fw-bolder'>.csv</span> Files!.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Import = () => {\r\n  // ** States\r\n  const [name, setName] = useState('')\r\n  const [value, setValue] = useState('')\r\n  const [tableData, setTableData] = useState([])\r\n  const [filteredData, setFilteredData] = useState([])\r\n\r\n  const getTableData = (arr, name) => {\r\n    setTableData(arr)\r\n    setName(name)\r\n  }\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: result => {\r\n      const reader = new FileReader()\r\n      reader.onload = function () {\r\n        const fileData = reader.result\r\n        const wb = XLSX.read(fileData, { type: 'binary' })\r\n\r\n        wb.SheetNames.forEach(function (sheetName) {\r\n          const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\r\n          getTableData(rowObj, result[0].name)\r\n        })\r\n      }\r\n      if (result.length && result[0].name.endsWith('xlsx')) {\r\n        reader.readAsBinaryString(result[0])\r\n      } else {\r\n        toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleFilter = e => {\r\n    const data = tableData\r\n    let filteredData = []\r\n    const value = e.target.value\r\n    setValue(value)\r\n\r\n    if (value.length) {\r\n      filteredData = data.filter(col => {\r\n        const keys = Object.keys(col)\r\n\r\n        const startsWithCondition = keys.filter(key => {\r\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\r\n        })\r\n\r\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\r\n\r\n        if (startsWithCondition.length) return col[startsWithCondition]\r\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\r\n        else return null\r\n      })\r\n      setFilteredData(filteredData)\r\n      setValue(value)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  /*eslint-disable */\r\n  const headArr = tableData.length\r\n    ? tableData.map((col, index) => {\r\n        if (index === 0) return [...Object.keys(col)]\r\n        else return null\r\n      })\r\n    : []\r\n  /*eslint-enable */\r\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\r\n\r\n  const renderTableBody = () => {\r\n    if (dataArr !== null && dataArr.length) {\r\n      return dataArr.map((col, index) => {\r\n        const keys = Object.keys(col)\r\n        const renderTd = keys.map((key, index) => <td key={index}>{col[key]}</td>)\r\n        return <tr key={index}>{renderTd}</tr>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const renderTableHead = () => {\r\n    if (headArr.length) {\r\n      return headArr[0].map((head, index) => {\r\n        return <th key={index}>{head}</th>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='XLSX'\r\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\r\n        link='https://github.com/SheetJS/sheetjs'\r\n      />\r\n      <Row className='import-component'>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm='12'>\r\n                  <div {...getRootProps({ className: 'dropzone' })}>\r\n                    <input {...getInputProps()} />\r\n                    <div className='d-flex align-items-center justify-content-center flex-column'>\r\n                      <DownloadCloud size={64} />\r\n                      <h5>Drop Files here or click to upload</h5>\r\n                      <p className='text-secondary'>\r\n                        Drop files here or click{' '}\r\n                        <a href='/' onClick={e => e.preventDefault()}>\r\n                          browse\r\n                        </a>{' '}\r\n                        thorough your machine\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        {tableData.length ? (\r\n          <Col sm='12'>\r\n            <Card>\r\n              <CardHeader className='justify-content-between flex-wrap'>\r\n                <CardTitle tag='h4'>{name}</CardTitle>\r\n                <div className='d-flex align-items-center justify-content-end'>\r\n                  <Label for='search-input' className='me-1'>\r\n                    Search\r\n                  </Label>\r\n                  <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\r\n                </div>\r\n              </CardHeader>\r\n              <Table className='table-hover-animation' responsive>\r\n                <thead>\r\n                  <tr>{renderTableHead()}</tr>\r\n                </thead>\r\n                <tbody>{renderTableBody()}</tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Import\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}