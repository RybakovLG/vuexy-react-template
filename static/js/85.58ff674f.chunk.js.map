{"version":3,"sources":["views/forms/form-elements/file-uploader/FileUploaderSingle.js","views/forms/form-elements/file-uploader/FileUploaderMultiple.js","views/forms/form-elements/file-uploader/FileUploaderRestrictions.js","views/forms/form-elements/file-uploader/index.js","@core/components/extensions-header/index.js"],"names":["FileUploaderSingle","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useDropzone","useDropzone","multiple","onDrop","acceptedFiles","concat","_toConsumableArray","map","file","Object","assign","getRootProps","getInputProps","renderFilePreview","type","startsWith","_jsx","className","alt","name","src","URL","createObjectURL","height","width","FileText","size","fileList","index","_jsxs","ListGroupItem","children","Math","round","toFixed","Button","color","outline","onClick","filtered","filter","i","handleRemoveFile","X","Card","CardHeader","CardTitle","tag","CardBody","_objectSpread","DownloadCloud","href","e","preventDefault","length","Fragment","ListGroup","FileUploaderMultiple","ErrorToast","Avatar","icon","role","FileUploaderRestrictions","accept","rejectedFiles","toast","error","hideProgressBar","Uploader","ExtensionsHeader","title","link","subTitle","Row","Col","sm","props","target","rel"],"mappings":"4PAkGeA,EAxFY,WAEzB,IAAAC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,EAAwCC,YAAY,CAClDC,UAAU,EACVC,OAAQ,SAAAC,GACNL,EAAS,GAADM,OAAAC,YAAKR,GAAKQ,YAAKF,EAAcG,KAAI,SAAAC,GAAI,OAAIC,OAAOC,OAAOF,EAAK,MACtE,IAJMG,EAAYX,EAAZW,aAAcC,EAAaZ,EAAbY,cAOhBC,EAAoB,SAAAL,GACxB,OAAIA,EAAKM,KAAKC,WAAW,SAChBC,cAAA,OAAKC,UAAU,UAAUC,IAAKV,EAAKW,KAAMC,IAAKC,IAAIC,gBAAgBd,GAAOe,OAAO,KAAKC,MAAM,OAE3FR,cAACS,IAAQ,CAACC,KAAK,MAE1B,EAgBMC,EAAW7B,EAAMS,KAAI,SAACC,EAAMoB,GAAK,OACrCC,eAACC,IAAa,CAA+Bb,UAAU,oDAAmDc,SAAA,CACxGF,eAAA,OAAKZ,UAAU,yCAAwCc,SAAA,CACrDf,cAAA,OAAKC,UAAU,oBAAmBc,SAAElB,EAAkBL,KACtDqB,eAAA,OAAAE,SAAA,CACEf,cAAA,KAAGC,UAAU,iBAAgBc,SAAEvB,EAAKW,OACpCH,cAAA,KAAGC,UAAU,iBAAgBc,UAddL,EAc+BlB,EAAKkB,KAbrDM,KAAKC,MAAMP,EAAO,KAAO,GAAK,IAC1B,GAANrB,QAAW2B,KAAKC,MAAMP,EAAO,KAAO,KAAOQ,QAAQ,GAAE,OAE/C,GAAN7B,QAAW2B,KAAKC,MAAMP,EAAO,KAAO,IAAIQ,QAAQ,GAAE,gBAalDlB,cAACmB,IAAM,CAACC,MAAM,SAASC,SAAO,EAACX,KAAK,KAAKT,UAAU,WAAWqB,QAAS,kBAvBlD,SAAA9B,GACvB,IACM+B,EADgBzC,EACS0C,QAAO,SAAAC,GAAC,OAAIA,EAAEtB,OAASX,EAAKW,IAAI,IAC/DpB,EAAQO,YAAKiC,GACf,CAmBiFG,CAAiBlC,EAAK,EAACuB,SAClGf,cAAC2B,IAAC,CAACjB,KAAM,SACF,GAAArB,OAVYG,EAAKW,KAAI,KAAAd,OAAIuB,IATf,IAAAF,CAoBL,IAOlB,OACEG,eAACe,IAAI,CAAAb,SAAA,CACHf,cAAC6B,IAAU,CAAAd,SACTf,cAAC8B,IAAS,CAACC,IAAI,KAAIhB,SAAC,aAEtBF,eAACmB,IAAQ,CAAAjB,SAAA,CACPF,eAAA,MAAAoB,wBAAA,GAAStC,EAAa,CAAEM,UAAW,cAAa,IAAAc,SAAA,CAC9Cf,cAAA,QAAAiC,YAAA,GAAWrC,MACXiB,eAAA,OAAKZ,UAAU,+DAA8Dc,SAAA,CAC3Ef,cAACkC,IAAa,CAACxB,KAAM,KACrBV,cAAA,MAAAe,SAAI,uCACJF,eAAA,KAAGZ,UAAU,iBAAgBc,SAAA,CAAC,2BACH,IACzBf,cAAA,KAAGmC,KAAK,IAAIb,QAAS,SAAAc,GAAC,OAAIA,EAAEC,gBAAgB,EAACtB,SAAC,WAEzC,IAAI,kCAKdjC,EAAMwD,OACLzB,eAAC0B,WAAQ,CAAAxB,SAAA,CACPf,cAACwC,IAAS,CAACvC,UAAU,OAAMc,SAAEJ,IAC7BE,eAAA,OAAKZ,UAAU,6BAA4Bc,SAAA,CACzCf,cAACmB,IAAM,CAAClB,UAAU,OAAOmB,MAAM,SAASC,SAAO,EAACC,QA5B/B,WAC3BvC,EAAS,GACX,EA0B0FgC,SAAC,eAG/Ef,cAACmB,IAAM,CAACC,MAAM,UAASL,SAAC,uBAG1B,UAIZ,ECCe0B,EAvFc,WAE3B,IAAA/D,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,EAAwCC,YAAY,CAClDE,OAAQ,SAAAC,GACNL,EAAS,GAADM,OAAAC,YAAKR,GAAKQ,YAAKF,EAAcG,KAAI,SAAAC,GAAI,OAAIC,OAAOC,OAAOF,EAAK,MACtE,IAHMG,EAAYX,EAAZW,aAAcC,EAAaZ,EAAbY,cAMhBC,EAAoB,SAAAL,GACxB,OAAIA,EAAKM,KAAKC,WAAW,SAChBC,cAAA,OAAKC,UAAU,UAAUC,IAAKV,EAAKW,KAAMC,IAAKC,IAAIC,gBAAgBd,GAAOe,OAAO,KAAKC,MAAM,OAE3FR,cAACS,IAAQ,CAACC,KAAK,MAE1B,EAgBMC,EAAW7B,EAAMS,KAAI,SAACC,EAAMoB,GAAK,OACrCC,eAACC,IAAa,CAA+Bb,UAAU,oDAAmDc,SAAA,CACxGF,eAAA,OAAKZ,UAAU,yCAAwCc,SAAA,CACrDf,cAAA,OAAKC,UAAU,oBAAmBc,SAAElB,EAAkBL,KACtDqB,eAAA,OAAAE,SAAA,CACEf,cAAA,KAAGC,UAAU,iBAAgBc,SAAEvB,EAAKW,OACpCH,cAAA,KAAGC,UAAU,iBAAgBc,UAddL,EAc+BlB,EAAKkB,KAbrDM,KAAKC,MAAMP,EAAO,KAAO,GAAK,IAC1B,GAANrB,QAAW2B,KAAKC,MAAMP,EAAO,KAAO,KAAOQ,QAAQ,GAAE,OAE/C,GAAN7B,QAAW2B,KAAKC,MAAMP,EAAO,KAAO,IAAIQ,QAAQ,GAAE,gBAalDlB,cAACmB,IAAM,CAACC,MAAM,SAASC,SAAO,EAACX,KAAK,KAAKT,UAAU,WAAWqB,QAAS,kBAvBlD,SAAA9B,GACvB,IACM+B,EADgBzC,EACS0C,QAAO,SAAAC,GAAC,OAAIA,EAAEtB,OAASX,EAAKW,IAAI,IAC/DpB,EAAQO,YAAKiC,GACf,CAmBiFG,CAAiBlC,EAAK,EAACuB,SAClGf,cAAC2B,IAAC,CAACjB,KAAM,SACF,GAAArB,OAVYG,EAAKW,KAAI,KAAAd,OAAIuB,IATf,IAAAF,CAoBL,IAOlB,OACEG,eAACe,IAAI,CAAAb,SAAA,CACHf,cAAC6B,IAAU,CAAAd,SACTf,cAAC8B,IAAS,CAACC,IAAI,KAAIhB,SAAC,eAEtBF,eAACmB,IAAQ,CAAAjB,SAAA,CACPF,eAAA,MAAAoB,wBAAA,GAAStC,EAAa,CAAEM,UAAW,cAAa,IAAAc,SAAA,CAC9Cf,cAAA,QAAAiC,YAAA,GAAWrC,MACXiB,eAAA,OAAKZ,UAAU,+DAA8Dc,SAAA,CAC3Ef,cAACkC,IAAa,CAACxB,KAAM,KACrBV,cAAA,MAAAe,SAAI,uCACJF,eAAA,KAAGZ,UAAU,iBAAgBc,SAAA,CAAC,2BACH,IACzBf,cAAA,KAAGmC,KAAK,IAAIb,QAAS,SAAAc,GAAC,OAAIA,EAAEC,gBAAgB,EAACtB,SAAC,WAEzC,IAAI,kCAKdjC,EAAMwD,OACLzB,eAAC0B,WAAQ,CAAAxB,SAAA,CACPf,cAACwC,IAAS,CAACvC,UAAU,OAAMc,SAAEJ,IAC7BE,eAAA,OAAKZ,UAAU,6BAA4Bc,SAAA,CACzCf,cAACmB,IAAM,CAAClB,UAAU,OAAOmB,MAAM,SAASC,SAAO,EAACC,QA5B/B,WAC3BvC,EAAS,GACX,EA0B0FgC,SAAC,eAG/Ef,cAACmB,IAAM,CAACC,MAAM,UAASL,SAAC,uBAG1B,UAIZ,E,kBCjFM2B,EAAa,WAAH,OACd7B,eAAC0B,WAAQ,CAAAxB,SAAA,CACPF,eAAA,OAAKZ,UAAU,kBAAiBc,SAAA,CAC9BF,eAAA,OAAKZ,UAAU,gBAAec,SAAA,CAC5Bf,cAAC2C,IAAM,CAACjC,KAAK,KAAKU,MAAM,SAASwB,KAAM5C,cAAC2B,IAAC,CAACjB,KAAM,OAChDV,cAAA,MAAIC,UAAU,cAAac,SAAC,cAE9Bf,cAAA,SAAOC,UAAU,aAAYc,SAAC,oBAEhCf,cAAA,OAAKC,UAAU,gBAAec,SAC5Bf,cAAA,QAAM6C,KAAK,MAAM,aAAW,aAAY9B,SAAC,uDAIlC,EA0FE+B,EAvFkB,WAE/B,IAAApE,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,EAAwCC,YAAY,CAClDC,UAAU,EACV6D,OAAQ,UACR5D,OAAQ,SAACC,EAAe4D,GAClBA,EAAcV,OAChBW,IAAMC,MAAMlD,cAAC0C,EAAU,IAAK,CAAEE,MAAM,EAAOO,iBAAiB,IAE5DpE,EAAS,GAADM,OAAAC,YAAKR,GAAKQ,YAAKF,EAAcG,KAAI,SAAAC,GAAI,OAAIC,OAAOC,OAAOF,EAAK,MAExE,IATMG,EAAYX,EAAZW,aAAcC,EAAaZ,EAAbY,cA0BhBe,EAAW7B,EAAMS,KAAI,SAACC,EAAMoB,GAAK,OACrCC,eAACC,IAAa,CAA+Bb,UAAU,oDAAmDc,SAAA,CACxGF,eAAA,OAAKZ,UAAU,yCAAwCc,SAAA,CACrDf,cAAA,OAAKC,UAAU,oBAAmBc,SAChCf,cAAA,OAAKC,UAAU,UAAUC,IAAKV,EAAKW,KAAMC,IAAKC,IAAIC,gBAAgBd,GAAOe,OAAO,KAAKC,MAAM,SAE7FK,eAAA,OAAAE,SAAA,CACEf,cAAA,KAAGC,UAAU,iBAAgBc,SAAEvB,EAAKW,OACpCH,cAAA,KAAGC,UAAU,iBAAgBc,UAhBdL,EAgB+BlB,EAAKkB,KAfrDM,KAAKC,MAAMP,EAAO,KAAO,GAAK,IAC1B,GAANrB,QAAW2B,KAAKC,MAAMP,EAAO,KAAO,KAAOQ,QAAQ,GAAE,OAE/C,GAAN7B,QAAW2B,KAAKC,MAAMP,EAAO,KAAO,IAAIQ,QAAQ,GAAE,gBAelDlB,cAACmB,IAAM,CAACC,MAAM,SAASC,SAAO,EAACX,KAAK,KAAKT,UAAU,WAAWqB,QAAS,kBAzBlD,SAAA9B,GACvB,IACM+B,EADgBzC,EACS0C,QAAO,SAAAC,GAAC,OAAIA,EAAEtB,OAASX,EAAKW,IAAI,IAC/DpB,EAAQO,YAAKiC,GACf,CAqBiFG,CAAiBlC,EAAK,EAACuB,SAClGf,cAAC2B,IAAC,CAACjB,KAAM,SACF,GAAArB,OAZYG,EAAKW,KAAI,KAAAd,OAAIuB,IATf,IAAAF,CAsBL,IAOlB,OACEG,eAACe,IAAI,CAAAb,SAAA,CACHf,cAAC6B,IAAU,CAAAd,SACTf,cAAC8B,IAAS,CAACC,IAAI,KAAIhB,SAAC,mBAEtBF,eAACmB,IAAQ,CAAAjB,SAAA,CACPF,eAAA,MAAAoB,wBAAA,GAAStC,EAAa,CAAEM,UAAW,cAAa,IAAAc,SAAA,CAC9Cf,cAAA,QAAAiC,YAAA,GAAWrC,MACXiB,eAAA,OAAKZ,UAAU,+DAA8Dc,SAAA,CAC3Ef,cAACkC,IAAa,CAACxB,KAAM,KACrBV,cAAA,MAAAe,SAAI,uCACJF,eAAA,KAAGZ,UAAU,iBAAgBc,SAAA,CAAC,2BACH,IACzBf,cAAA,KAAGmC,KAAK,IAAIb,QAAS,SAAAc,GAAC,OAAIA,EAAEC,gBAAgB,EAACtB,SAAC,WAEzC,IAAI,kCAKdjC,EAAMwD,OACLzB,eAAC0B,WAAQ,CAAAxB,SAAA,CACPf,cAACwC,IAAS,CAACvC,UAAU,OAAMc,SAAEJ,IAC7BE,eAAA,OAAKZ,UAAU,6BAA4Bc,SAAA,CACzCf,cAACmB,IAAM,CAAClB,UAAU,OAAOmB,MAAM,SAASC,SAAO,EAACC,QA5B/B,WAC3BvC,EAAS,GACX,EA0B0FgC,SAAC,eAG/Ef,cAACmB,IAAM,CAACC,MAAM,UAASL,SAAC,uBAG1B,UAIZ,E,OC3EeqC,UAxBE,WACf,OACEvC,eAAC0B,WAAQ,CAAAxB,SAAA,CACPf,cAACqD,IAAgB,CACfC,MAAM,iBACNC,KAAK,mDACLC,SAAS,8EAGX3C,eAAC4C,KAAG,CAAA1C,SAAA,CACFf,cAAC0D,IAAG,CAACC,GAAG,KAAI5C,SACVf,cAACyC,EAAoB,MAEvBzC,cAAC0D,IAAG,CAACC,GAAG,KAAI5C,SACVf,cAACvB,EAAkB,MAErBuB,cAAC0D,IAAG,CAACC,GAAG,KAAI5C,SACVf,cAAC8C,EAAwB,WAKnC,C,mCCvCA,oBAwBeO,IAlBU,SAAAO,GACvB,OACE5D,cAACyD,KAAG,CAACxD,UAAU,OAAMc,SACnBF,eAAC6C,IAAG,CAACC,GAAG,KAAK1D,UAAU,QAAOc,SAAA,CAC5Bf,cAAA,KAAGC,UAAU,qCAAqC,YAAU,kBAAiBc,SAC1E6C,EAAMN,QAERM,EAAML,KACLvD,cAAA,KAAGmC,KAAMyB,EAAML,KAAMM,OAAO,SAASC,IAAI,sBAAqB/C,SAC3D6C,EAAMJ,WAGTxD,cAAA,KAAGC,UAAU,eAAcc,SAAE6C,EAAMJ,eAK7C,C","file":"static/js/85.58ff674f.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Third Party Imports\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { FileText, X, DownloadCloud } from 'react-feather'\r\n\r\nconst FileUploaderSingle = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: acceptedFiles => {\r\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const renderFilePreview = file => {\r\n    if (file.type.startsWith('image')) {\r\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n    } else {\r\n      return <FileText size='28' />\r\n    }\r\n  }\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Single</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderSingle\r\n","// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Third Party Imports\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { FileText, X, DownloadCloud } from 'react-feather'\r\n\r\nconst FileUploaderMultiple = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const renderFilePreview = file => {\r\n    if (file.type.startsWith('image')) {\r\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n    } else {\r\n      return <FileText size='28' />\r\n    }\r\n  }\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Multiple</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderMultiple\r\n","// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Imports\r\nimport { toast } from 'react-toastify'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>a second ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 You can only upload image Files!.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst FileUploaderRestrictions = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles, rejectedFiles) => {\r\n      if (rejectedFiles.length) {\r\n        toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\r\n      } else {\r\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>\r\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n        </div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Restrictions</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderRestrictions\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Demo Components\r\nimport FileUploaderSingle from './FileUploaderSingle'\r\nimport FileUploaderMultiple from './FileUploaderMultiple'\r\nimport FileUploaderRestrictions from './FileUploaderRestrictions'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\nconst Uploader = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Dropzone'\r\n        link='https://github.com/react-dropzone/react-dropzone'\r\n        subTitle=\"Simple React hook to create a HTML5-compliant drag'n'drop zone for files.\"\r\n      />\r\n\r\n      <Row>\r\n        <Col sm='12'>\r\n          <FileUploaderMultiple />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <FileUploaderSingle />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <FileUploaderRestrictions />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Uploader\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}