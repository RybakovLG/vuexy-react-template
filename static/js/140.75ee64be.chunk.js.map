{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseCategoryQuestion.js","@core/components/breadcrumbs/index.js"],"names":["KnowledgeBaseCategoryQuestion","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","axios","get","then","res","_jsxs","Fragment","children","_jsx","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","id","Row","Col","lg","md","size","order","sm","xs","Card","CardBody","className","Info","ListGroup","relatedQuestions","map","i","ListGroupItem","tag","href","onClick","e","preventDefault","question","CardTitle","Smartphone","title","lastUpdated","dangerouslySetInnerHTML","__html","content","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","color","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar"],"mappings":"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","file":"static/js/140.75ee64be.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Info, Smartphone } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, CardTitle, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\nconst KnowledgeBaseCategoryQuestion = () => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/question').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const renderRelatedQuestions = () => {\r\n    return data.relatedQuestions.map(i => (\r\n      <ListGroupItem className='text-body' tag='a' href='/' key={i.id} onClick={e => e.preventDefault()}>\r\n        {i.question}\r\n      </ListGroupItem>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Knowledge Base'\r\n        breadCrumbParent='Pages'\r\n        breadCrumbParent2='Knowledge Base'\r\n        breadCrumbParent3='Category'\r\n        breadCrumbActive='Question'\r\n      />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-question'>\r\n          <Row>\r\n            <Col lg='3' md={{ size: 5, order: 1 }} sm={{ size: 12 }} xs={{ order: 2 }}>\r\n              <Card>\r\n                <CardBody>\r\n                  <h6 className='kb-title'>\r\n                    <Info size={20} className='me-50' />\r\n                    <span>Related Questions</span>\r\n                  </h6>\r\n                  <ListGroup className='list-group-circle mt-1'>{renderRelatedQuestions()}</ListGroup>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col lg='9' md={{ size: 7, order: 2 }} sm={{ size: 12 }} xs={{ order: 1 }}>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle className='mb-1'>\r\n                    <Smartphone className='font-medium-5  me-25' /> <span>{data.title}</span>\r\n                  </CardTitle>\r\n                  <p className='mb-2'>Last updated on {data.lastUpdated}</p>\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: data.content\r\n                    }}\r\n                  ></div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBaseCategoryQuestion\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}