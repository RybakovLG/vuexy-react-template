{"version":3,"sources":["views/components/badge/BadgeLink.js","views/components/badge/BadgeGlow.js","views/components/badge/BadgeBlock.js","views/components/badge/BadgeIcons.js","views/components/badge/BadgeLight.js","views/components/badge/BadgeContextual.js","views/components/badge/BadgeSourceCode.js","views/components/badge/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgeLink","_jsxs","Badge","color","href","children","_jsx","Link","size","className","BadgeGlow","BadgeBlock","BadgeIcons","Star","BadgeLight","BadgeContextual","badgeContextual","badgeGlow","badgeLight","badgeIcons","badgeLink","badgeBlock","Badges","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","title","code","CardText","md","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","to","active","UncontrolledButtonDropdown","DropdownToggle","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","CardSnippet","noBody","iconCode","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","onClick","Collapse"],"mappings":"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","file":"static/js/100.0941a433.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgeLink = () => {\r\n  return (\r\n    <Badge color='primary' href='#'>\r\n      <Link size={12} className='me-25' />\r\n      <span className='align-middle'>Link Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeLink\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeGlow = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeGlow\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeBlock = () => {\r\n  return (\r\n    <Badge color='primary' className='d-block'>\r\n      <span>Block Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeBlock\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Star } from 'react-feather'\r\n\r\nconst BadgeIcons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Primary</span>\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Secondary</span>\r\n      </Badge>\r\n      <Badge color='success'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Success</span>\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Danger</span>\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Warning</span>\r\n      </Badge>\r\n      <Badge color='info'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Info</span>\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Dark</span>\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeIcons\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeLight = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='light-primary'>Primary</Badge>\r\n      <Badge color='light-secondary'>Secondary</Badge>\r\n      <Badge color='light-success'>Success</Badge>\r\n      <Badge color='light-danger'>Danger</Badge>\r\n      <Badge color='light-warning'>Warning</Badge>\r\n      <Badge color='light-info'>Info</Badge>\r\n      <Badge color='light-dark'>Dark</Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeLight\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeContextual = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary'>Primary</Badge>\r\n      <Badge color='secondary'>Secondary</Badge>\r\n      <Badge color='success'>Success</Badge>\r\n      <Badge color='danger'>Danger</Badge>\r\n      <Badge color='warning'>Warning</Badge>\r\n      <Badge color='info'>Info</Badge>\r\n      <Badge color='dark'>Dark</Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeContextual\r\n","export const badgeContextual = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeContextual = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeGlow = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeGlow = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLight = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeLight = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='light-primary'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='light-warning'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='light-dark'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIcons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Star } from 'react-feather'\r\n\r\nconst BadgeIcons = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Primary</span>\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Secondary</span>\r\n      </Badge>\r\n      <Badge color='success'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Success</span>\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Danger</span>\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Warning</span>\r\n      </Badge>\r\n      <Badge color='info'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Info</span>\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Dark</span>\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLink = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgeLink = () => {\r\n  return (\r\n    <Badge color='primary' href='#'>\r\n      <Link size={12} className='me-25' />\r\n      <span>Link Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeBlock = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeBlock = () => {\r\n  return (\r\n    <Badge color='primary' className='d-block'>\r\n      <span>Block Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport BadgeLink from './BadgeLink'\r\nimport BadgeGlow from './BadgeGlow'\r\nimport BadgeBlock from './BadgeBlock'\r\nimport BadgeIcons from './BadgeIcons'\r\nimport BadgeLight from './BadgeLight'\r\nimport BadgeContextual from './BadgeContextual'\r\n\r\n// ** Source Code\r\nimport { badgeContextual, badgeGlow, badgeLight, badgeIcons, badgeLink, badgeBlock } from './BadgeSourceCode'\r\n\r\nconst Badges = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Badges' breadCrumbParent='Components' breadCrumbActive='Badges' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Contextual Badges' code={badgeContextual}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color</code> with <code>Badge</code> tag to create badge with different colors.\r\n            </CardText>\r\n            <BadgeContextual />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Glow Badges' code={badgeGlow}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge\r\n            </CardText>\r\n            <BadgeGlow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Light Badges' code={badgeLight}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create badge with different\r\n              colors.\r\n            </CardText>\r\n            <BadgeLight />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Badges With Icons' code={badgeIcons}>\r\n            <BadgeIcons />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Link Badge' code={badgeLink}>\r\n            <CardText>\r\n              Use <code>href=\"#\"</code> prop to use badge as a link.\r\n            </CardText>\r\n            <BadgeLink />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Block Badge' code={badgeBlock}>\r\n            <CardText>\r\n              Use <code>.d-block</code> class to make badge display as block.\r\n            </CardText>\r\n            <BadgeBlock />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Badges\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}