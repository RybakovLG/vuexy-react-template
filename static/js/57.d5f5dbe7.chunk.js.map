{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseCategory.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBaseCategory","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","filteredData","setFilteredData","_useState5","_useState6","searchTerm","setSearchTerm","useEffect","axios","get","then","res","params","useParams","Content","_ref","item","IconTag","Icon","icon","_jsx","Col","className","md","sm","children","Card","_jsxs","CardBody","size","classnames","_defineProperty","iconColor","title","concat","questions","length","ListGroup","map","listItem","ListGroupItem","tag","Link","to","category","slug","question","id","Fragment","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbActive","KnowledgeBaseHeader","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj","_toConsumableArray","Row","BreadCrumbs","props","breadCrumbParent3","Breadcrumb","BreadcrumbItem","active","UncontrolledButtonDropdown","DropdownToggle","color","Grid","DropdownMenu","end","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","FaqFilter","style","backgroundImage","require","default","CardText","Form","onSubmit","preventDefault","InputGroup","InputGroupText","Search","Input","onChange","placeholder"],"mappings":"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","file":"static/js/57.d5f5dbe7.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-knowledge-base.scss'\r\n\r\nconst KnowledgeBaseCategory = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [filteredData, setFilteredData] = useState([]),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/category').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const params = useParams()\r\n\r\n  const Content = ({ item }) => {\r\n    const IconTag = Icon[item.icon]\r\n    return (\r\n      <Col className='kb-search-content' md='4' sm='6'>\r\n        <Card>\r\n          <CardBody>\r\n            <h6 className='kb-title'>\r\n              <IconTag\r\n                size={20}\r\n                className={classnames('me-50', {\r\n                  [item.iconColor]: item.iconColor\r\n                })}\r\n              />\r\n              <span>\r\n                {item.title} {`(${item.questions.length})`}\r\n              </span>\r\n            </h6>\r\n            <ListGroup className='list-group-circle mt-2'>\r\n              {item.questions.map(listItem => (\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\r\n                  className='text-body'\r\n                  key={listItem.id}\r\n                >\r\n                  {listItem.question}\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  const renderContent = () => {\r\n    const dataToMap = searchTerm.length ? filteredData : data\r\n\r\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const value = e.target.value,\r\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\r\n\r\n    setSearchTerm(e.target.value)\r\n\r\n    let arr = []\r\n\r\n    if (value.length) {\r\n      arr = data.filter(item => {\r\n        return (\r\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\r\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\r\n        )\r\n      })\r\n    }\r\n\r\n    setFilteredData([...arr])\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Knowledge Base'\r\n        breadCrumbParent='Pages'\r\n        breadCrumbParent2='Knowledge Base'\r\n        breadCrumbActive='Category'\r\n      />\r\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-category'>\r\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBaseCategory\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\r\nimport { Search } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\r\n  const onChange = e => {\r\n    if (handleFilter) {\r\n      handleFilter(e)\r\n    } else {\r\n      setSearchTerm(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='knowledge-base-search'>\r\n      <Card\r\n        className='knowledge-base-bg'\r\n        style={{\r\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\r\n        }}\r\n      >\r\n        <CardBody className='text-center'>\r\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\r\n          <CardText className='mb-2'>\r\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\r\n          </CardText>\r\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText>\r\n                <Search size={14} />\r\n              </InputGroupText>\r\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\r\n            </InputGroup>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaqFilter\r\n"],"sourceRoot":""}